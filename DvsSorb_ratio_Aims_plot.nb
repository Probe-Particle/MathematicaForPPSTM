(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    563423,      10737]
NotebookOptionsPosition[    558705,      10660]
NotebookOutlinePosition[    559058,      10676]
CellTagsIndexPosition[    559015,      10673]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["d-orb./s-orb. ratio plotting", "Title",
 CellChangeTimes->{{3.756210010967393*^9, 
  3.756210039518127*^9}},ExpressionUUID->"652d2e1f-87d4-4bc3-a477-\
046f9d40e4a9"],

Cell[TextData[{
 "This is how I got rescaling coefficient of 0.2 for ",
 StyleBox["d",
  FontSlant->"Italic"],
 "-orbitals used in PP-STM code. It is from ",
 StyleBox["d",
  FontSlant->"Italic"],
 "/",
 StyleBox["s",
  FontSlant->"Italic"],
 " ratio plotted in this notebook. It is approximate average far away ",
 StyleBox["d",
  FontSlant->"Italic"],
 "/",
 StyleBox["s",
  FontSlant->"Italic"],
 " ratio for basis valence functions used in FHI-AIMS.\nThis factor is \
important to lower down contributions from ",
 StyleBox["d",
  FontSlant->"Italic"],
 "-orbitals which do not protrude that much into vacuum.\nFHI-AIMS was chosen \
since it has very well defined basis-set which should be closest to real \
hydrogen-like basis."
}], "Text",
 CellChangeTimes->{{3.75621006411734*^9, 3.756210305694421*^9}, {
  3.756210350079108*^9, 3.756210398627837*^9}, {3.7562104393577347`*^9, 
  3.756210500779306*^9}, {3.756210706572851*^9, 
  3.756210718283299*^9}},ExpressionUUID->"587b9869-7430-4b16-bfff-\
393522d967f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomicprop", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<~/Documents/atomic_prop.dat\>\"", ",", "\"\<Table\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "path", "=", "\"\<~/Documents/WORK/AIMS_calc/WF_ploting/6th_row/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"path", "<>", "\"\<geometry.in\>\""}], ",", "\"\<Table\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bas1", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"a0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "tmp1", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"tmp1", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", "\"\<atom\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bas1", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"bas1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"tmp1", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "5"}], "]"}], "]"}], ",", 
             RowBox[{"tmp1", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"tmp1", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
             RowBox[{"tmp1", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"a0", "+=", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"tmp1", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxat1", "=", "a0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"species", "=", 
   RowBox[{"bas1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"species", "//", "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atoms", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"Null", ",", "maxat1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "maxat1"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "99"}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"bas1", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"ToString", "[", 
         RowBox[{"atomicprop", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"atoms", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"bas1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"bas1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], 
          RowBox[{"(*", 
           RowBox[{"*", "rescale"}], "*)"}], ",", 
          RowBox[{"bas1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], 
          RowBox[{"(*", 
           RowBox[{"*", "rescale"}], "*)"}], ",", 
          RowBox[{"bas1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}], 
          RowBox[{"(*", 
           RowBox[{"*", "rescale"}], "*)"}], ",", 
          RowBox[{"atomicprop", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"atomicprop", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", 
          RowBox[{"atomicprop", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "5"}], "]"}], "]"}], ",", 
          RowBox[{"atomicprop", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "6"}], "]"}], "]"}]}], "}"}]}]}], "]"}]}], 
    "]"}]}], "]"}], "\n", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"Rotate", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{
             RowBox[{"atoms", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "]"}], "]"}], 
             "/", "256"}], "]"}], ",", 
           RowBox[{"Sphere", "[", 
            RowBox[{
             RowBox[{"atoms", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}], "]"}], 
             ",", 
             RowBox[{"0.6", "*", 
              RowBox[{"atoms", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "6"}], "]"}], "]"}]}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"atoms", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}], 
            "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "maxat1"}], "}"}]}], "]"}], ",", 
     RowBox[{"0", " ", "Degree"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"20000.", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "80"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.646659580673628*^9, 3.646659607257201*^9}, {
   3.648382152394652*^9, 3.6483821656504793`*^9}, {3.649410508853694*^9, 
   3.649410512841061*^9}, {3.671087136724626*^9, 3.671087139524714*^9}, 
   3.672063256807166*^9, {3.6817081290596323`*^9, 3.681708131195629*^9}, {
   3.681724655777287*^9, 3.681724656120906*^9}, {3.681725944298409*^9, 
   3.681725997826*^9}, {3.69563518934588*^9, 3.695635352974535*^9}, {
   3.6956353887512913`*^9, 3.695635392391858*^9}, {3.7033290792069073`*^9, 
   3.703329082342443*^9}, 3.7033309925339327`*^9, {3.703331107158251*^9, 
   3.7033311077072067`*^9}},ExpressionUUID->"09138d90-92f8-4326-9010-\
edcedccf883a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"W\"\>"},
     {"\<\"Ir\"\>"},
     {"\<\"Pt\"\>"},
     {"\<\"Au\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.695635304664105*^9, 3.6956353535062313`*^9}, 
   3.6956353956460533`*^9, 3.695638353665244*^9, 3.695638537585964*^9, 
   3.695638800024976*^9, 3.703329084821753*^9, 3.703330993154413*^9, {
   3.703331108138667*^9, 3.703331127463934*^9}, 
   3.7033312313673983`*^9},ExpressionUUID->"e1333b37-ea16-4cd5-a65c-\
788b2c0cdf3e"],

Cell[BoxData[
 Graphics3DBox[GeometricTransformation3DBox[{
    TagBox[
     TooltipBox[
      {RGBColor[
        NCache[{
          Rational[33, 256], 
          Rational[37, 64], 
          Rational[107, 128]}, {0.12890625, 0.578125, 0.8359375}]], 
       SphereBox[{0., 0., 70.}, 1.158]},
      RowBox[{"{", 
        RowBox[{"1", ",", 
          RowBox[{"{", 
            RowBox[{"\"W\"", ",", "0.`", ",", "0.`", ",", "70.`"}], "}"}]}], 
        "}"}]],
     Annotation[#, {1, {"W", 0., 0., 70.}}, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[
        NCache[{
          Rational[23, 256], 
          Rational[21, 64], 
          Rational[135, 256]}, {0.08984375, 0.328125, 0.52734375}]], 
       SphereBox[{0., 0., 75.}, 1.08]},
      RowBox[{"{", 
        RowBox[{"2", ",", 
          RowBox[{"{", 
            RowBox[{"\"Ir\"", ",", "0.`", ",", "0.`", ",", "75.`"}], "}"}]}], 
        "}"}]],
     Annotation[#, {2, {"Ir", 0., 0., 75.}}, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[
        NCache[{
          Rational[13, 16], 
          Rational[13, 16], 
          Rational[7, 8]}, {0.8125, 0.8125, 0.875}]], 
       SphereBox[{0., 0., 80.}, 1.05]},
      RowBox[{"{", 
        RowBox[{"3", ",", 
          RowBox[{"{", 
            RowBox[{"\"Pt\"", ",", "0.`", ",", "0.`", ",", "80.`"}], "}"}]}], 
        "}"}]],
     Annotation[#, {3, {"Pt", 0., 0., 80.}}, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[
        NCache[{
          Rational[255, 256], 
          Rational[209, 256], 
          Rational[35, 256]}, {0.99609375, 0.81640625, 0.13671875}]], 
       SphereBox[{0., 0., 85.}, 0.9959999999999999]},
      RowBox[{"{", 
        RowBox[{"4", ",", 
          RowBox[{"{", 
            RowBox[{"\"Au\"", ",", "0.`", ",", "0.`", ",", "85.`"}], "}"}]}], 
        "}"}]],
     Annotation[#, {4, {"Au", 0., 0., 85.}}, "Tooltip"]& ]}, {{1, 0, 0}, {0, 
   1, 0}, {0, 0, 1}}],
  Axes->False,
  Boxed->False,
  ImageSize->80,
  Lighting->"Neutral",
  ViewPoint->{0., -20000., 0.}]], "Output",
 CellChangeTimes->{{3.695635304664105*^9, 3.6956353535062313`*^9}, 
   3.6956353956460533`*^9, 3.695638353665244*^9, 3.695638537585964*^9, 
   3.695638800024976*^9, 3.703329084821753*^9, 3.703330993154413*^9, {
   3.703331108138667*^9, 3.703331127463934*^9}, 
   3.703331231422347*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
+b9OCTTL\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=."}], 
  ";"}], "\[IndentingNewLine]", "species", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lmax", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "4"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "[", "1", "]"}], ":=", 
  "\"\<_s.dat\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "[", "2", "]"}], ":=", 
  "\"\<_p.dat\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "[", "3", "]"}], ":=", 
  "\"\<_d.dat\>\""}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "species", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "[", "i_", "]"}], ":=", 
     RowBox[{"ElementData", "[", 
      RowBox[{
       RowBox[{"species", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Period\>\""}], "]"}]}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"name", "[", 
     RowBox[{"i_", ",", "k_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"l", "<", "3"}], ",", 
      RowBox[{"path", "<>", "\"\</at_\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"n", "[", "i", "]"}], "]"}], "<>", 
       RowBox[{"o", "[", "l", "]"}]}], ",", 
      RowBox[{"path", "<>", "\"\</at_\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"n", "[", "i", "]"}], "-", "1"}], "]"}], "<>", 
       RowBox[{"o", "[", "l", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "species", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"{", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"l", "=", "1"}], ",", 
      RowBox[{"l", "\[LessEqual]", 
       RowBox[{"lmax", "[", 
        RowBox[{"[", 
         RowBox[{"n", "[", "i", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"l", "++"}], ",", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"name", "[", 
           RowBox[{"i", ",", "I", ",", "l"}], "]"}], "]"}], ","}], "*)"}], 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "100"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", 
            RowBox[{"name", "[", 
             RowBox[{"i", ",", "k", ",", "l"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"name", "[", 
               RowBox[{"i", ",", "k", ",", "l"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"R", "[", 
               RowBox[{"i", ",", "l"}], "]"}], "=", 
              RowBox[{"Import", "[", 
               RowBox[{
                RowBox[{"name", "[", 
                 RowBox[{"i", ",", "k", ",", "l"}], "]"}], ",", 
                "\"\<Table\>\"", ",", 
                RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}]}], "}"}]}],
           "]"}]}], "]"}], "}"}]}], "]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.648381114673232*^9, 3.648381122839981*^9}, {
   3.648381254367094*^9, 3.6483813013916187`*^9}, {3.6483813562549267`*^9, 
   3.648381402792494*^9}, {3.648381445432322*^9, 3.648381448800462*^9}, {
   3.648381521768354*^9, 3.6483815624325047`*^9}, {3.64838159559304*^9, 
   3.648381696985634*^9}, {3.6483820471227427`*^9, 3.6483820907433453`*^9}, {
   3.6483822415233593`*^9, 3.648382272770693*^9}, {3.6483823097705193`*^9, 
   3.648382353995221*^9}, {3.648382400425809*^9, 3.648382643032461*^9}, {
   3.648382687883821*^9, 3.648382819697509*^9}, {3.6483849191967154`*^9, 
   3.648385026650432*^9}, {3.6483850904040527`*^9, 3.648385112184224*^9}, {
   3.648385198145749*^9, 3.648385209898244*^9}, {3.6483857344267683`*^9, 
   3.6483857605600452`*^9}, {3.648385909505146*^9, 3.6483859147318296`*^9}, 
   3.671087143706547*^9, {3.6817246584078007`*^9, 3.68172465995295*^9}, {
   3.681724967810999*^9, 3.681724976423284*^9}, 3.681725068491808*^9, 
   3.68172600927094*^9, {3.6956351186198463`*^9, 3.6956351225860367`*^9}, {
   3.695635492880876*^9, 3.695635498535934*^9}, {3.695636231570434*^9, 
   3.695636271348547*^9}, {3.6956383795982018`*^9, 
   3.695638383159824*^9}},ExpressionUUID->"05119fe7-5581-4cde-b27e-\
3f55590c8b7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"W\"\>", ",", "\<\"Ir\"\>", ",", "\<\"Pt\"\>", 
   ",", "\<\"Au\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6956362671247787`*^9, 3.6956362720612087`*^9}, {
   3.695638358904426*^9, 3.695638383968697*^9}, 3.695638541874219*^9, 
   3.695638804609281*^9, 3.70333001014594*^9, 3.703330998814762*^9, 
   3.70333123830346*^9},ExpressionUUID->"d0535c91-e4a3-4515-b06e-\
85419acc1107"],

Cell[CellGroupData[{

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_1_6_6_s.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.703331238308074*^9},ExpressionUUID->"d6ad371c-38c5-412f-aab9-\
3810679f3d3c"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_1_15_5_d.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.70333123848771*^9},ExpressionUUID->"82c66380-bb6c-4db6-9a22-19380acdcb3b"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_2_25_6_s.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.703331238623464*^9},ExpressionUUID->"bc96798f-162f-48b6-86b0-\
befba8be53ca"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_2_34_5_d.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.7033312388395452`*^9},ExpressionUUID->"5e2d16a0-62ef-4c96-ace5-\
882b695d1efc"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_3_44_6_s.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.703331238983843*^9},ExpressionUUID->"73384b95-0519-4109-86c8-\
00d24f5a8a92"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_3_53_5_d.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.703331239213793*^9},ExpressionUUID->"659db642-8202-4704-9981-\
84fa2554e0f3"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_4_63_6_s.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.703331239362897*^9},ExpressionUUID->"dc8642bb-1dae-4f2d-98b9-\
6c140a656683"],

Cell[BoxData["\<\"~/Documents/WORK/AIMS_calc/WF_ploting/6th_row//at_4_72_5_d.\
dat\"\>"], "Print",
 CellChangeTimes->{3.695638544473708*^9, 3.6956388046106853`*^9, 
  3.703330013298067*^9, 3.703330998819314*^9, 
  3.7033312395705557`*^9},ExpressionUUID->"d43d0b97-e6d4-4d54-beb0-\
afb4ed20f8e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"R", "[", 
          RowBox[{"i", ",", "l"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", 
           RowBox[{"lmax", "[", 
            RowBox[{"[", 
             RowBox[{"n", "[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"species", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "8"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<s\>\"", ",", "\"\<p\>\"", ",", "\"\<d\>\""}], "}"}]}]}],
       "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "species", "]"}]}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.648385042597542*^9, 3.648385046847447*^9}, {
   3.6483851646559267`*^9, 3.648385175847562*^9}, {3.648385230030488*^9, 
   3.6483856063439913`*^9}, {3.648385639672269*^9, 3.648385642102378*^9}, {
   3.648385927478169*^9, 3.64838594127734*^9}, {3.664868483309063*^9, 
   3.6648685534148207`*^9}, {3.6650572902898827`*^9, 3.665057300982132*^9}, 
   3.695636088635447*^9, {3.69563632602922*^9, 3.695636330057863*^9}, {
   3.695638819629157*^9, 
   3.695638823417211*^9}},ExpressionUUID->"43770928-2c58-4832-8ed8-\
71cad4810c99"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
LexnTTI/YBY4/ZRNZQPz/wGacH9q
             "]]}, {}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
bsTwSotwKS/9QLvj2XQ/3Zswj1fW/zL1fyD93vzFf+TNmExrEyVN1g+0Gq5I
XJHWjK16hW0Zrf9ALmdv14vdbsEuc4k/ihT5icY5n7gXTLZg7FCLn+HxE9nP
nRyLe7RicjatHUkdP9GW9S1lMs42zPVnj70b9TK62z49dH+kDVOkuPlDTn8Z
OftHanIHtmMXkiwI8PKX0Tl67Uv9Uh2Y/u5eY+HBMhJj9B+yxu3Efu+lUqnJ
rSDxuZ322x2dmDlV2OFK3ApSCW0fMInuwmgrdP09fq4gunEXKzbTbkxKGHVQ
iK8iuqUnPTnQg7UsMM+lvllF4U1p47wsXzDGxuq/N2dW0dRJkuIGUS8Wp9Ik
OyK8huLv1jay7/di0393cd2D1hD+2/lyio0+TKBJxl5wdg29t+PLW1vvx1LV
jtb2RdfR2fJPkScvBzC8oJ6OoYh15BY/+rQFdxALeYRj1ba6jqgm34n+DB3E
xokSFIdlfqGf6RHnw5iHsMJj0/nTtF8oMs2SZ6p0CLvaI16ufPoLmZ9pW/yr
NIwxNe4/atHbQBA7O0fxaxiTn217ali3gapSt8juRI5gNfLXAq4zb6LLZ5NT
6m+NYm/wBey4vTdR/7tvvEUro5j1gzdLWgubyJcSaqTfjWGKfE/GZq9soTe/
XStztMYxKqH3KqWPtpDnY5Pz5JcmsIYixQGO4C2k8UTlfvrMBFZ7Vln1Vv0W
2ilss08pmMTwdGt7d3a2kGREtayQ91dMfWpPUY17G7kFMgrG63zD2nsrJjT1
t1GI6ZQBvsR3LEv7ii9x7DbS5rQaLmWfwtjnlgxMvmyjLZ+Cp3MXprFjRxRt
g7+DSIl1p7vJZzDbJDp0HdtBzLpn8LUIZ7FqKZbQJKcd5JdcpWsWPIu9oh4v
qSvaQVy+wzY11HOY5XrecvzaDvpsxvfI9v0cdruY0JqHaxctrlBJFgrMY+UP
7EJdjXfRnUr/0KT2eWyZ431UQOouyvy0OahtuIBVufuNPJzeRX7BlDMXcBex
969tihYZf6O7Y6j/d9YiZvfy6hvxx78RYScBJbvqEkaFdzSg8fY3wmmkseo7
XcL+4A//uT31G5FLRzCwlv/ADJK0HDeY/6AdveK2ezY/MS1z/GFrwz/I0mky
zk1wGSOUFU9qzvyDRPL+yi0dLGN9F/T0V5b/oNl1y+s17StYOcVO9Q/ePWSg
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
             
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10}, {-0.638011689826393, 0.741600397454301}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Small, LabelStyle -> Directive[
           GrayLevel[0], 8], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"W\"", TraditionalForm], 
         PlotRange -> {{0, 10}, {-0.638011689826393, 0.741600397454301}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"s\"", "\"p\"", "\"d\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 8], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "8"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
71GDJw==
             "]]}, {}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
s9Iyi8as/+78qeJhzP8DZmdO3g==
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10}, {-0.665956732017996, 0.831785149332403}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Small, LabelStyle -> Directive[
           GrayLevel[0], 8], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Ir\"", TraditionalForm], 
         PlotRange -> {{0, 10}, {-0.665956732017996, 0.831785149332403}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"s\"", "\"p\"", "\"d\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 8], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "8"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
E2zvY7QEh6WR+BvnlecfE433J22XqY4iJdDrET3/E0Lmc7ylvNxR/NiRZJNh
94SA7pcCdqej+BBVn0lV/oQYDG9MDig+CoGzPxkVPj0hMlm1SzxeHUWWUbHJ
aemnBGVMnzoFhwwGh+X2ynk/JW7RLC1y6cnAgc6fnqLrKXHKRXnb/ZsyeJdZ
OVq4ZZJo1+Dk2dEngz+0kZIiepNEIkNM3Zu/MuAzu76akjZJhLOmwVj+GPRz
IxaXFiYJf6M9epYex+Ar1PNWUHyKMDJ5eX1L/THERzIMnfX9x2Il0lpf/tWT
VqFX7k8RLZmKwkfEZHG//SOV1+5p4uIp36WKq7Jo0Tuo6mM7TdDTqbOOVsiC
2uKJjnvjNKFxqko1YVkW+8Mui12lf0ZczFri/nNEDkNbXlFanXtGEGev6e10
lIPY0fV3phXPCGbupeD+ajnYshjvNKF4TlhvuWgr+FUOc14Z5RcNnxMiCly1
R48eR/btcIpr5c8JFuFnez97Hod/PptJLNULgi2ly+5c+3HM2eXRd5u+IF4u
XzVwoZLHUu6Wa9vqXxD0YRRlOCWPYImedYedM0SQuLB0Z4w8LMN3ci1eniFc
2mR6Vp/I407INv2I/hlirJLjyJt9J+DW8UJUk+8lMbnV7VS07QlMKzxSkQp5
STxSql79XH0CmsnhUurzLwl9+R+cLL9OgDaIqjxS9RVxyF0r7auqAj5NvLL8
U/SKuHom1TrhtgJcfFtiDWhfE6P/Ndj/fKGAxSW3qf5jrwmnA9fzeYUJeO/q
+Dlp/5ooPFq2jc2TgGF2x7vIrNfE/Sid3NF+AnJiDzNeTrwmImkcrxqyA/kN
zpxT9LPEQ09t7xJbYAtrjLWnwixR9spm6kETMPj94q0ul1liUKXz9CsaRZTO
J+Q2lM0Sm60XviqLKiKh0KnLaG6WCP12yo7ZRBHmY8Pbi7nmCA4P/06tYEV4
5Z8oKdGfIwQzGnd9q1CEEA9738XoOeKBh7PXlilF6DvFJQ8OzBG5r3/viKZW
gtP16fNLVPPERrDPcpCYEspreQwHiXlCnG5Z9v15JcyFdg1b+MwTYSri7F0R
SnALUNzd2jxPFMewljM0KqFewOPmo9V54i2j8cHReSU8+pgTXnN0gbAXry6k
Y1HG8UBXd323BcKd44ldg6IyDqrJ93c0LBBvEZn24poyDNU/rHxfXSD2Mme4
+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
buiJgZaCmp3uh3Dh89WXpvGeWFdcTfxIHoLDMf+ivHFPnOvl5mzaJohsZw+J
UCYvvNiezu5gJIiy9KB5ijNe4FN+6cKQL4jpHFdertte6DsbfCD3syC+yT4z
HR/zwpY8U2YhCMGk6tOPQyzeoDkQr1kSIwTXW8VWBwy8cax2+MnBV0KoFi1n
a0nyxgyV4kCKuDAWVS4Erk57g6V0/ARTiDAyeJ5yTe/zweuy42a3ngojhfGT
maWlD67+x3OR4fBhhFrI3Y8v9oHvPOGWGngYf8Joph1XfOBj77osOXkY9isX
mX5I+UKk+AfLjOgRnBtg/n7IxxeXWKxV0sOPwK+2fPvWHl/0Dn+ec5o9Avqj
HrOp2/0g8cbPwuKECCwFAqleGPihYZ2Uc0oRAcWrO3/GsvwQecb8S84PEajo
nfjP+4MfrC8c4FzTFwX7j/uPp6X94Zu9pu1+VxQ8URovPgf6w3ibkjQPqxj0
2iI4u4b9Qd37OOiPmxiMAliFtfcEgNla4vvOaTEs2MhWxV8OwPHR0bLy/eIw
qtw8ldocgBu1hzuu6onjwC62M2I0gVhsPls4GioOY7cDVdePBOJ5XYTxo2Zx
qDrLJ+w2DITrHuUJ7xVx6N20nN7vHwit9GOcgzwSuGXxwTCyOBBt3V4y7SYS
yCvxnzceD/znr24cvxArgZ/rQhdvbQTC853hieJ+CfyJ1szmEwhC8i2/czl/
JPBjNjGcTy8ISoYyjRrHJGF3hP3HLd8g2Kx4+hU6SUKvS3DwfEkQFnyYZxvK
JKF8xncu4XEQtgk0cPq9kYQvFeMhWcpg3B/bbbfJLQUZjyPeaqLBuHaIiknu
ohS2Zjp0dZ4PRtM7O0vJNCmU2VXMF0cGg9XV/+7SpBRemLPd/90UjC2Vjy7Z
sUujexfz+c63wfBgsXlYbCiNa3paod/YQtAt0mRRnSiNNp0q8eSTISg8uZIY
+FQal+Iv6VS4haD9wuzcPo6jODDSNihVFIIonxMPI02Pgt3e5I7oZAjo1GOn
+zOPYoluNS1zSyjCFuxzJmeP4mF72OOg46HYe8S7tUNABtvk+CVfXAkFIZz+
wP+KDGQymEsqs0PR+2Xdh+uuDC7KVx5emwiFKMkfnPBLBqe53e+20N3AMcej
qZ+UjyHtAtWx1eM3MKo8dUM06hgoDm1UVV67gRN07mwGT4/hRfduttmCG5jy
0thvdVAW7uIc1nHPboCW2zfA7KosMgvIZJIpDH0XlA9qtMpCtn+k4op6GB59
XPvOv0UOPjWbOan+YbDpPvFjzUgOVM0/rqs3hqFqP4tAd5Ecyr5o8nh8DIO2
2HpC+Jocznm5VQsdCkfJ4vZzWhrHccrjwR5z83CEGfHHM2Uch8mc6+U9aeF4
dXj16rNPx3Ft82r6hcfhIJ4L7q9QlUdujFsDH2ME6r4GzEWkycNqZGubq2YE
+t7+oHb9Io+MHZfqdcIicA4zT5w0TiB+m3FBTXcENoQoG4PzTkCb3vNO1t8I
NF7v31H5+wT6fOdvcChEomFBW+ebsQIOR2mHHfCJxA7WuB8m9Qo4uftjen1L
JCbjYmJmmQlMhAaOTq1HYleUZcVtJwKHRcWEo2VvIuiZ48fLYwS2ukY3THje
xGsvv79OEoCZ5y2fspabmHVfSCyNBw752IexbdyEgmaZy+414PhUzWtWhVvI
1DeUeiWiiID8fYmlAbfA8uoi37i5In7Pplc97r4F+l8fAqwSFDF14ahsMl0U
qrZwIGVQEao7aBW+akZB9fsJC+dNRfByCA2+jY2C1r21pc+SSmh0qF9wexIF
S5xc4rishJ3PsjNz9kTDXS/BeSlbCUNjrZt2ltFg3ZxOtp9UQmRSOuNwaTTy
dxX5pTAqI5wldmbsSzS0149peJxSxgxXhLPr8RhYVMYf2hqsDEu1nU+aQ2Kw
nS9Z+0ybMtgUjzBnD8eAbZTx2+k1ZdSkXBQV5IhFgdfYBXopFbzc5SttaBWL
JsuBCZ9rKtBwrBA+VB2L41mshVUVKrBL1dydvRGLrDbuw3mLKmBqWPxrxncb
91ru9pgIqaLn+RVXZa3b+CS148nj/1Sx3eWjvff12zBYXh3iKFXFZcd8a/q0
21i7/Zb70KIqrtfwz33ouo2f49tPUx05CVX7y1Y8i7cR1H11usLxJH4I19rV
ssTBPYzqjFDdSfhkBl1Nlo/Dos6gmvfqSTB+S/j62DoOktkvTfPk1dC+Puxi
HxOHnM/ZEgVBavjyRPiqSXMcJu/c8wweVEPq9aZz2XNxaFnWfQsmdYwGB9wF
wx1830or98pEHRYygd/kZO9A2O+QrFWeOlRvpsbFWN1Bd1LP3ZFldbAdD6Ah
Yu/g8pfOUD7ZU2jVLe06de8O9A3/RNmFnsJJXVWF6nd3oPXtalPa+Cn8+c29
6Mwaj9J1ifXOAxrov5cvF6cUDxW/Fu0ZRw0EB91NZ7gWD7ehmXtfOzTw6FKJ
/7uMeFhvozCiYdIEmSWne+BhPBJlDh1ls9SEuZ2DZ8PPeNBH7/cTbNCE7m8f
qzLBBHxVSzivtFULVX5jHn+ME3CpTXaLlZkWsmRmuerCE9D3bqb3dr0W3jjz
1/Q1JWBOO3lmeLs2Ah/9SZF7nwAa1Wcl+6y10SNdIL2TMxHby7PCQ9q1MUex
47WKZiLObAa8oeLQgTHj0x/PfBIx9OilbLaLDpZ/So88qkxEzQgV9YUxHbxb
etoh+joRox9OjJ0QPY21d8NcyyxJ2KewTfZk9GmYBXtI7lBLQprwsRnPldOg
ZLDWj/VKAv0GlePz07qIllQYdKtMQuuiSoFTrS4i/5RPkbNJ2HjUx5O17Qyu
6BL3r7InYzdPEfNBhTPQqtF6HqCVjKEhfwYVpzMITp7WXg1Mhkb8we10BWeQ
TR9gMt6YjO3ikbRXps5gMVb9KPNKMvw6ljfdGfTwojSRvZE3BRUXH20Iquhh
wInmSKdpCrqYBBlCvfRAV3sqV+xOCnhe6qjdrNFDtxZzFs2DFMyJSHcrvNfD
0PLbk6BKheV/Dnk53Gdhybi9+dXxVPQ/kWNsOHcWHrpGjG9dUqFB1hzziz8L
JRp2y7OVqdiY6NLbGP6nH/zQxfcuFQsPDNIktupD/UKG/MWDaTAwuWjIc1If
u+NoJzfOp0HG4MvwaJA+lO1eJlEkp8H46CWjE6Q+RsSyPB0m0iA+rHrKflMf
ir/Pup7YmY5k7SKaCycMULTo5euimY6M27Tfd/kaoCH/qR9TeDooWrzCEtoM
YLpF89Ku3nQ83TIg9XrTAL7bSyh9KTNgwuLh8xOGONwQBU1kYFz0y8JcsCGg
Lb7i55eBHJX4v1n9hjidf3yKvS0DePLAUny7ES6GJQ6wbmSA87JoVeoZI8yf
JHw8jmci5lhy5EySESovsFcQ3pm4JSpf+GfGCEoid7fbt2bCQm2g5S+/MeQf
H1H9+SsT4kLeEfOOxgjfsby2JJ+FdFE8r2g2xi0ejy4lvyzsqrgfakZtgspv
ClK/OrLgnV5jvnHaBPvXrCdZKbORnHJTPyzdBPw6sWJxKtnol9mmRfXBBJcm
iusdw7Lxq5qLuH7sHJalSp9W3M/G2MrvI9Nh50AbJOlfSJeDSx+tDx6fPAe5
VwVKBYI5UL2RLJoiaIpXX+IvTWjmoMY7wnnV2xRtX375il3NAf3Wn0wmI6bY
HXVf7l7sP701SaGT5zzSH/eKu9XlYEspl6Sk53lMVdmtXXiSg8p9l6VqR85D
qap73/X1HDgn195WFLiACIfzovV7csEvHZs/738Baqe3V/EgF4aBQmOZUxfw
+f7MnnbLXIRXGd64LnUR2xk+fg4Oy8WATPMJm9iLaD2omuNSlgvX12+9vZYv
YsC/NilmJBcLMrdG6zTNoLal8vijr7kotr/xhLXMDIIBosuKu/PQmsMolb/t
EqbNImkm5fNwt2Y21eLKJTgJqj9NMP/H+oYD+qOXMMlFWel1Iw83LE92d3Ca
45Sx3HBoWR7EltT0nbXN8dxZyrVhNA/qbQrhPQHmaLs6NLntRx70Zx4ZNN01
RyvfWYFQrvx/uXuu+fR7cxzgMg3jVsxHempI4619FkhpTmZ/ZZOPHYZCxk76
FrDZqF3puJWPcxpVZX8iLdAYzMFF1uaD9abDgGyXBdJ2TeW+nMzHxRbtB9w/
LTAW4hi8908+5loWnjZLWGKeOavGg68AQnnBu6kdLHFCWJHjk2YBSr6otVMW
WmIidXdGkHMB+rbIUTS9soSJWB6baEoBLixcOMC/xwofHn4w+NZRgN59981P
G1vBasGAe+xNwb950s58NMEKaa7u0j07CnGeujns+bgVmGxnVB5KFcKYjNmj
ymSNRIf51bemhTj3JkTKWdcaw/o+S6zBhXC+ayZnE2uNuMd/6vVLC7E5FpzN
M2aNw+Mbz3PHCjF6csvrcmYb7NlP+XJzrRDP2x75UhvYoLbXXsT2QBGkdlX/
PZxsA/v7IhLTakWwlLb8dei5DZg981UNHYvAcHKI7tcBW7yRNWiaSizC+N7N
/gIbWxz42jVk0V4EcybdN8IVtnj4U6Lt40IRRnYEscZ+s0V/unuN345i0NOO
Mz6WtwOPbPPADulipNaxp/8OtUPaH4Vdaef/cdnL4O2jdhjQkknmDSnG4sCN
DGqu/yBd6a9ZXFaMB0sG/e9s/sPLOAd23olidLNlvmut+w95FbFPE34WY+vj
R58DKC7j484Qk1/cJbjFUPNcTvcyPlCWndc7VQJHAfXypazLeFuwcTv5WgkC
AoWvpHy6DB2TwbQHSSVwN7khraJkD6vfATvet5dAhlKe71O8PV5u97RfWSiB
hT+tTfY7eySl1QpNbS8FX0CCsPEJB/xUzK4ulCxFRWtFHecdBxhvLurpnysF
qtVPLr53QDfrCaOXAaVw6rsrPaR4BVqbv7+oFJXCbKp+pjv1ClQvHNQMGipF
BF9h8fi3K3DgXb4e/7UUkllJNL9PX8X1qYZrHhxlmKxxdT5ZfhWvWe5KChNl
ePmfgHvtFkdMnbiXUWJVhtkttYUqdo7Izmf0+xRRhqHt57P+9juCfMMTt1FZ
Bq3E0a0fDl1D6ZB56P2JMvTrKWdS37z2752ufjJcK4P+QDyn/so17KDPMM3c
U46AHfcKVwSdMO15QTYD5fi6/z7t2HknSNlYLJ62Kkf9U6Pss7FOUNzZ3lEb
Vo4dSu/tPXqc8EtK5nNnaTl0t8nYKa474U0Wa5HnUDkOblFKrRZxxsmsj98e
fywHKG13DFg5oyjaY3qcqQKxd50nItKcUeCuq+wgWQE1zgbqtXFnGC48os3U
r8DwCie5a9t1TPz58tbStQKmLseEZ5Wvo5v2V3xzQgUWvOycLXyv462Sa1Fq
fQV0S54PJDVeh33YWh7l4wrkbLlrF/LlOm6cp/y59LUCdFOMd4REXNCwPEpl
wFyJ1HSR2FuXXSD0VIH2qFglsr09qsqLXHBmJVvspnYl+F9lqUUtuGDyYGH6
6cuVWL1Y1yDG6wq6RFkdvxuViH8rbZFi6YpsOltJ5txKECeONg7muYKlSZGX
tq0Sn5pthHrmXSHwemhW/2kl2M5LH7vJ74bZN0uc658qwXVg3or7PzeMW2pZ
LG+pws3CHPmIcjfkShkfO3ywCosCuWd7P7mBrViUtlq2Ctsaj52clHZH4HrG
vuu6Vfg4/qmpx9sdf+XZ2h1tqiB/qtg4qssdpQu1W7O9q8B9uWRaaqsH5HbK
7tqMqUJPdO9Gm54HCur3PwrOq4L0V8dQ4XQPyNOmHRFuqMLK/KRywBsP6K2W
LS/3V+HDyS2MHeKe2KMv9aB3sgpmDpv3P/h6QtBhp235uyqIavZdpH3gCbdE
Ua201X/n0aW37+Lwwotm8uNNmmr8fkL9dredF07v0K1xZ67+998vv2Bt8kK3
8vq00b5qSA321TJs8cZ345QcPsFqxPUV+NGaeoNOmo5vWqIa3C/NrP5WeCP+
ot61q8ercaCiNPYPhQ+efKXzeqZUjYfTcnJ0Rj4I4vXj5TxVDe30uRzOCh9E
2/Ir8OhU4+mtBuYT1L6gLXkT+PFMNdg+8cw6nffFwQrPJHf9aoiYcF27V++L
C2+fsNw1qEZk02GBA4x+oKfJ9cz4x11jJT7Z9n447pAre/hf/TPOgU8Y8APL
Z6U643/7idN2M9Dw+0OImlOaS7saxk2bDp9C/GGd6fXbXq0aasLCFbQL/lAT
ZTiujGocJm19NE8GYGTCfUeKTDXkFW3vdBUHgHIvxQ3rI9X4UnrftIk2EMaV
usXZ3NWwqE17JiwbiKINIXulXdVYXH8go+AQiB73E81K/+6XUy7e6nNWIPj+
++aU8q0KP1T0z6s9CgTLhOllhdkqVFoX7lfaEgTr9G1XBYeroP7buX5OIQgp
Bvuh11QFlgvUwiKuQbCdl02vzq5C0kvOeJ7yoH+5LUFGPqwKj0CxrW8uCMSN
/V1L9lWIOppTzb4nGOz3c98261Thyqnkck6DYBg/3NBNE63C2EetI2PRwUjf
ZlEQzlCFrYtUdicGg2FrV3XTc7ESL99+TzanDkF47WCZdV8ljlhaUwEhUIrb
Vq2SVYnrE3c/T/uE4DFX10kGt0oc3u1bL9USgnTTJp4WjUoMiuYXnV4LgeWh
cQrsrYSItMshEZlQ0EY05CctVyCpoDZr3C0UYesR002tFej72OhDNIZiYrrJ
Ny2sAjraYUfd10JxxWjcTeZMBY68faPpI3cDD2lc2kN2V4DipIfyGd8b6Is5
aeb9ohxdO8fK1sgbeJW/zYMluxxjzPFcrjRhUPduO6F6qRznsiPFBzXCcJ2b
/E2/rxziR9vjV2PD8PYl7wGjqTJ0esZ9o5wMg867P4KH4sqQFvKSfmV/OAxu
jXa4qJfhffD2uFa7cNRJbhRJb5SivUzI5GptOOpVzw9ZVpRCwp9RbMvvcPDI
vFRcMy2FxVXXz9HqEfB/L6+4RFcKvwc7AikTIvA6pF1StqYEfexFD2xmI/71
J0fNpFEJ6kpU+tvFInGMwTy451cxtCrkr+8I+McD1KU/0osx728waTAaid+c
S+f/O14MTrs5+jTum1hlz9rJ/rQIhWVvDry6fhOWq6EuP//5gXtUQicP9d9E
iKx8AANtEfSdzIvduG7B/PGqg05KIYqdTwUOX7uF/+yp2+sFC9GT2rdLsv8W
fl3WU0ZjAchbNDVF+6IwxcS594NiARJM0ypF3aMA3riOqsF8PDpdeG14NAre
ki0/onTy0b3ro1WYcDSyiWMfAv/5wVrtrdQXw6Jx1v0Ud8TpPCgleI0ZzEfj
wHDvjZwHuf/m8bips1IM9NiPXhlUycW6x5R8Y04MOtQ24v605IDzZynHIcpY
yLhG8SuL5OC25kzugGUsCuU84/nls+GdUxyf3heLAVtx6Vm2LGyNojj/iPU2
bLvKzJoXM6D12trRXf02KBoT1Stb0oGotW/N3rexW+eXWE9wGgIp7s9mVN0G
I62j45+TqQhNYJfmm7+NHodLntbUKfBfv7hyhiMOJe0+SxutSUhdcGLnPx33
z78fTh66kgheusiOvNA45Jryh73iSMDlwxc2Ht6Lg4cy8xaQd3CkWvxD3rc4
OPzFvdVLcdDl+1omdOQOhlNfHDm0Got6ZTV7S5s7qEwReqN+MBpzbHnGutl3
8CkpSOia0k3853ip7Ov0HegYv71GGoVjKmki5zRbPP7roxE1swjFd23zQBu9
eDCMri+7WARBlCIhUS4mHvtesLaaVPlCxEhGevhhPPYutExcueEOvlWrJp5t
CeDPY0mOOOWEnRkFQSc0Ev75u2u+op+t4OVKtbk3MgH5Q+9PGxdoY6XrYHr/
/QSInqpJ42RQJ8khkyfy2xNxqanw0ptHlqTh/sEjATqJ0Bqv6HtO7USmbHER
jr+diKcZlSKjVe4k6W1yyftxIu6p028ctfcjVfiirI9xJmHG+vm9Zq5g8v1b
3edDZkkokH4SuBJ+g9yWKnJVoTAJg0uXvlv8jiCfcDAP3VpOQvPFyaJWjyjy
Ya1lXat0MkQyflGk/Iwl8eTg/JBfMvpOHON62BlHMh+iEO4bSEbHtitJReHx
pO8r3/NFLCl4tjSsKKiXSMqEUBi6mKWg9qtA/e59yeTQ1/XfouUpyPrwWf/4
UgqpO/FD+cV6Chq3Gajp30sjb2n2HfBXT4WQfIIjb3QGWcUXl7g7ORUTE9/t
LptnkZVKv6vL/+V43aroTieuHNLKUTFUQS4NlDs3n/PQ5pKFidoSY7fS8KqD
/7nA51zSSm/+le2rNDT80Lczfp5Hsr5o6aaR/pfbXx/YjO7PJwOtktkrI9PR
VZO7lFdbQKLDlcfqdTo+3qc0uJpRSG6/kXFM+J/Tq1O0F+oJKyJ3xD2spY3L
wNBLMwkvp2Iy77Xe2vq/vpdeCaSxOldCps9LedGrZeLSll5GfaVS0lBc+650
XiaOqXImcQmWkTT5V4+E/s2E43xiXSRDOWn+/ob7z4tZaJ7lOn/tSznJ7tYp
mtKehbHIYKvURxXk5aXSTav92ZhQPxf0+G4lKfxZP9k8MBvfZgTOLMdVkTlO
Xvfi5rNBy6ZjVH61mlSrHE/b5M1Bk5fijau8NeSX+SLHMaMcKLR+Wc6NqSG7
R+m0VG7mwEr/UrLReg2pYPT8kElHDt5Rrt5zNK8lb7ErUTN/y8G3i64cw/21
ZP9K2uw1wVy81j79Q/9wHdnQXDjsbpaLTOorwm+i60hSP2rqUOK/OTKmxmf5
sY6cmd7gvDGUi6dTNh/Kte+SCryyNbdp8rD72Qnu/JK7ZFCoeKe2Qh7ObbnG
JkhVT6qPJrjdc8/D6GePbq5z9eREwiLVq5o8OOq0PTatrCdLy/NyW5byUBFP
0zDwp578uS56R+dQPqK/WcYq6jSQcf4cezOt/uVa87DzBSkN5NkqtpiynHxc
4vZ9M/66gXxHfZDwfJmPvXKzT4v5G8mKN7GRW/YVwHkttJPGrpHMHhZ6cvFC
AW6n+fENFDSSsvcQ7Z1R8M+P1QQOv2wk933q4beYKcDshYfnVlmbyMgvFlys
BwqhHdmsxq3eRFouJH1MtCgE8cr/t5BbEzlx8IHIh4JCtHBmmn7NaiJDBW0d
mD4UIoN90sOkt4k8/vSL8k7RItT0e1TLv2kiP3wRMnnjUoQ7TXTVPpTN5Am6
PcYprUWg13MKXedoJn2j5b8LURUjOzG74s7hZvL1tbDlDM1iXP8QznNYrpnU
f5JI+z2+GFFMmY75Ss1kklYHg+TLYnxTamqcUW0mqZSFX5wTKgH5yHykTbmZ
rHv+44yjWwnUS26q88k3k6acWobXu0vQwFcQsi7STA6d93/+H1MpYtl29e3f
00xKKx5+ZXCpFPX+9Ep+VM2kzqSejVx1Kdw/FElszDeRXrKuvpwUZUg2vPk+
kGwid16vP7GuV4ajgZGzawlN5MvJrwNTBWVwJIefaFo3keK1yxod62VIlxMY
tRFpIg3Uz6+X65SjozdJXuZzI/nHcNeuwvxyhCtwUZZXNJLlL/kWKn6VY6bw
dly9ZSPJa75B9p+tAN/02B9VlkYy3sWfdrW8Aq+4n+w8c6+BPDYmuZ+gq4TC
tZ+6Dy82kPRN5/3zLCrR5q8kUvWznswb2Fso0FGJ2pgMqq8x9WQLMvaO7KkC
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
             "]]}, {}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10}, {-0.656574781092841, 0.836526199004776}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Small, LabelStyle -> Directive[
           GrayLevel[0], 8], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Pt\"", TraditionalForm], 
         PlotRange -> {{0, 10}, {-0.656574781092841, 0.836526199004776}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"s\"", "\"p\"", "\"d\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 8], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "8"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwUl3c4l28bxsusXypJFMle2bLHcyKkkF0km4ZkR5RZkUT2JnvvTfJFVmRl
JISGJBFSCtXb+9d9fI7z+eO6j+t67vM62a2d9O3IduzYMUi5Y8f/T62EmdFC
hRpCs7jmc8FlFuhvOoyG+NUQA68N22SrWOA+ed5O/lkN0U8h2xz6lwWRfrlH
26hribPZlEMZWsfg+jEoiU27lgid3rfqk3QMRV5XgkyiawnyCJnDHAvHIL6H
IcJpopZYqF3WiJBhBTPPoJMdRx3h3Tsf0nOfFasVlz8qXqsjgj6Lzb98zYqd
n42fblXXEZKv9jaMHmJDTcHHzoy/dcSRoXQ2AbAhap/UtLhmPfH9s3b95yts
SHaxn6+Iryde9HREHIpmw/X61gH2uXoiKcP9afFTNoz9LQ+7d6KBWOMPMaz4
xAbL9J3ss4ENhFP9liMXPTsSwpejJIYbCHrzWD5qJXbcYFT5cY+rkdg8uvH4
ggM70jfdLr/yaCSOiGT8YE1kx833XTSCPY3EJ4tNXeNOdlCoODAEH3tCXLh5
foxinR0bdxObF92eEDubySp4ODggWFtx2qznCSF57+Q+ki4HErwtqWbYmwi7
MbtjA34c+ObxRNvdu4lY4GmjNy7jgAeTzR22kSYijbuD13SGA72DWYfmhZ8S
lMkbEa/3cyIxJd6n98FTos+MKmxEiRM1zBoYmn9KyJv2mGq7ciL/x+DClloz
oV6tq6SWzQn/pkBGnZxmgvPrO/+nY5zQF6Ry7KckEY2K+y/X7ebC/mW/NJ/L
JILzdTkkFLlQ/aTazrKHRBi5/rwg6cIFjj8M6oqMLcT5eneaphwuMF4V+TZ/
uoX4842p6PkEF44P2B4X92khsht0Ii1ouRG8TfeOpaKF+Fz+9aifOjf8I58x
lMy1EFWuxmX8Ptww91TufcvUSpB8XEosq7kRGlW8q1m3lfisXOPH/YUbFZVh
0yeDWwlPFbkoLy4elLZ+tr7R3ErY6zQZmpvx4KC4aaXhj1bCcixHbjSOB59L
jq68F24jKDSPPJkZ5EE9FZ8695U2wjxvU9dvDy90L6vPMWW2EQoUv7xr1Hnh
3c1D2TXVRrw9nfDkTiAv9he4fRA4/Iy4/EsucbGZFxn/LXRrGj4j+vcJpi1v
8UKkyv4vX+Qz4th2vnG4LB9oa5imOvqfEbNPFy+88OTDc0XnRq697QTTbkn5
wlo+5Baf/X1Kq50gjx6L5v/BB6a1o/vFH7YTM66K5FpS/MiTeWM196Kd2JO2
LXDQkx8G46pOtvs6iDDfV9X+9fy4EztSX6HbQeRmv9CI2+QHt+Bq10B0B8ES
zRZvpHgcknzbQq2vOgiJvCsGLf7H4UBz/e79o53EAnOc5Hj7cRzv/uzAZ91J
6PPv3EzbLYAoH7vIrPxO4iXcrRh0BPA0QTR7+2snQWEpLaYUKwAOWRZLKZku
gvIR84ljUwLgW465bxDQRUxdDpKs5BTEZFf1wrneLoK+x2fPn2uC+NZ0xfgk
QzcxnlP1kLxGEH8uBVcyW3cTz+YiY9v/COI/huXpd6XdxIqHOvXJ00IIUUjt
S97uJmSdBrr8Y4TwRmLU87Tmc4LQp27zmxWCudWJ2eWk54TNjYo5ZSFhcOcP
0D1afE5sBAbxPvcWRrXmBW4hxR7ix1HlAMbnwghgl5N+8aiHyH9cuCp8WARV
vEUuTu97CCeK/NsHrohA9tYbaiaZXoJ8Tl2gtV4EZ8ropQfCeolWnTlKNkpR
xAR3qUd96CUa+qYOawiLwoGh5f4lhRfEKePvE6/Pi4JcScFEJ/YFYXX+tOlY
gCjosvex6n79xxQFRUSxKA59JWk6nOkjdHQzZg++EoV3TLlpXm4fkT0ZeOA8
mRiovsmNUVD0E3f/XjHeLSyGmg+j2vet+4mcT0ovBS6IwfGJtKVkWz/B1z6Y
RgoSw2KRV+1+zgHC8k/zbEeVGI7my1My3xsgJqMTn+KtGK4XdtOYfhogWt3f
mAnvF0d1Q+qLqzyDxIvN31+iFMXh9UZPWdVkkFhycUh0dBCH8WLsWPPDQWK6
6nFMW/I//drju5Mtg8TAGPPBiF5xjIS9Op3yfZAgvnppjW+J42rF8nFygSHC
bs7pVorgCazxrYjTWQ0R4ubjb96YncBrxXNuvfFDxP76xurURycg6nqMQmxg
iChlNlB903oCjmTT5GrULwnmDKaR1PUT6Mwbi9+t9JKgChkoneWVwFjyni/+
Xi+JZw98OPJMJXB3+tyJkqqXBKV0kP/aIwmMNvvmRSy/JB46FbC0t0sgNk8z
ROj4MLH9ba8+y6YE8kTT2IIuDRNHKM54/RWRxLMb95pSsoaJe4wOa9cuSSKj
yqjK7e0woVdEzmabKglVQZL1XrYRwpv7+JWFEUlcM5gTcbAYIRL6QyV+00hh
6aRHcNTjEWLprfNaupoUNn3b3gTOjhB7qjvpxnylwPZjpBQco4TGCt9/afVS
ILcK9e21HSXElz7rbq5JoXqmdJwvf5Q4e5jd5ouQNBI/0+hd+DJK8HsVtty4
Ko03ERF3rMXGCEktuaX4HGlcpLpIr+o5RjjXWDkbvpPGjsB3ZTubxwiZ0MTR
YlYZZF0n25NG+YqwkNUqzjSTge4n1vfMZ18R75tmgqVTZECbgj8+8a8Is3rS
X4dJGQh+YhfoevuK8M24XKbKLIsNS3PlTcFxgkR9XarFVBaKuX7sTF7jROx6
iMzbFFmoR7LW8HeOE+fs8swKpmWR9YT8qwD9a4JuZl6PiV0O/RZyvZw2r4mo
o5UdkrZyyI6R1qGvek28Gnty/XeeHPbPrYXsoJggRPLpyd2+yOGJKmXMotEE
ofKf2MkEMXmI23Q9Gs+fIJScvn919JSHk7lzQc/2BHHTo3Xg51N5MI9JMHbo
TRKPFW6VSFMqINPy0pHevElisSvJWEhbAcY20ZszfyYJ9wjJnMlYBbw9m7ef
+vwU8ZbrPwfVGQUwK++pP1n+jxdDH1zlV0Tv3i6zxP/eED5kX99puStCsyzz
xp5Lb4jH0hIXV0iKCGLT8Ette0Mwcku+M6IhEJphR2nANk2YXyq38zMhQH1l
MFXEb5o4uWQ05ZhHYLMpb0FqZppYdx9W4vlB4O/9m7EOSjOE/8G3UXlqQKCu
lclI5gwh8Fn71XoskKWbvC1DPktMr9Mcpp0H9H4ZZGZLzhIe22yVPkeV8OV2
5Z6yK7NE52neK1NqSthsyBC8kDJL0FZ/lctxUoJJlfjfvMFZwr5uW/Z1ohI+
fim7k0T5lhituOPp1a4EDsqKlhPybwm+IrddwV+VEPJQ+NkNl7dEoNBtCnJm
Zdgyx6VZ578lXIXpg5bVlTGVO+2wPfOWWN4VUHjGTRl0DKln1Q6/I5Tvv4k8
nK4MisNHrkHvHcFBwW5h0qcMWnnrlS8P3hE04Twy+7aUMaNud1C34x1BLlqt
JsOvgvDXO2mv7XhPLCsEVo2fV8FbDTZ+JYX3RFWlSvlKkAqsurvyh26+J/hK
868H1KpAclRilr32PcG66sT28KMKIj995T2x/p6I9bbdQcd4ErkuH2aoT3wg
tMXsNeg1TuIt402nTNcPxET6XakYr5NwUs9Uo6z6QFx5Pr0nuugkZndSvBZf
/0CcJRumoZs+idFdO/KFpOaI3K9r/nQHVFGlNCzz8+YcQR66vypWVRWcTiVH
YpvmiLtQXk25qYoE5Z5Zqp0fiYtHVh7yl6jCPeuBoK76R+L3rqkJhXeqYLUN
z3J7+JFgkeM+Mc6ohk6h/nW34Y9Eka/h6ra2Gqb6al4ZMM8Tq3027sV31eA1
SNAw2M4TFOOdxz49UYO10x7TpyXzRG2J27mKb2pYHg2I1fo5T3D7LN7dLaiO
xsb52M6TnwhBm5OMa7bqsND1hXDEJ+K5npCvQ5o6yMLTfIPefCLq9+wU9h5X
B8PQqMZLgQXCSrIj7ejBU2B8TZZKf2uB0L8lo2V09hReHHO7o9u7QFzrn6jh
fnAK4cE79oUc/UzM1fwwf9R5CqEeIsatjp8Jl7rC/mhyDSgraAdvt34mQkf/
va7KGjj8MbxHkWGRkOOqFHPz08AfR1HT+9cWiavuTep6zRrYrR9ze6Z1kaBm
mLUb/K2Ban+b2+pHvhCHK77yrymeRtbTksoWly/EkuQLsXrf07hi9l+gXu8X
ouKDIxtXy2nIODac3+ZeIlwcvqVIk52BskZHUXvAEvGGPVN/XfUM/IK5dpZO
LxGftDdXTO+fQbLz1NwThWXCOaZJwPnFGZxo4/y2mrxMSLp9bxQ/oImob/f6
DLaXCanX1KY55zQR946Ke87sK1E6VvfieYommlbVawpavhJLdpKjGe81QfNi
OFOfboXg0uYlRAS0wCVeP7KkukJcP1I76uamBTK5TQu+myuE6Il4R5cmLYyJ
XpSjKF4hOGgOz/JTaeOR4QuLO7MrBOVlfqrHutqYVLn5Mu/QKnGxwb71ZbI2
ZHNmk9w0VwnNPMmNznlt7GJe6voUsEp0JhZE+kichYb1DqfdDauEmVOd38+A
s5gj0RS/WlklCk8J1cgOnsXx/PwMI/41ov1q2/GTrDowyOf0ume9RpDUOKcZ
nHTwLTLZ+mrKGhEU+XuolqSD358OxJK/WiOSlaiCo3bp4kJswNlzdN+ImLCo
gQoxXVSPrw/bnP1GrBtkaMqZ6uJGSLKLcOg3gvPxcyqhe7roj37rXd/9jeiW
VNkfWqaLkNZ7Zyio14lT2/M3jCZ0kfu8XIVefZ1wtVM9G0apB798mr7P99aJ
qtXo0hNieohWnrrwoHOdGGx6UXbaTA/hmgftvlN/J+SYcq4PhuihO9jRQfjM
d4JLKYnqea0e1tQe/pIO+07Y79xIlvigh98SlKn0Q98Js7gJPXo6fRwJvPe1
89APIskdOleV9PFR/WOknukPgkKKrFnCSR/xp04J1WX8ID6Gf+rxTNOHMhm/
2+anH8QVg/ycE/364KcNZjkmtkG4P1z2v/pHHwITa8tc3hsEXcqlKCYRAwhm
lFYeaN8gjFxa6TQsDdA02a0wv+8nQf6iSfFbpAGGF6Tt8y/8JP6LOK7P0m6A
EdYfbMZ5P4lKvp+RXT8M8JL/mO6v9Z/E1pakyjd+Q2h3U6+En/xFTC0dK8ow
M8TZeVuyo9G/iNZvrIdHIg0hfcAiKuv9L0K8fuZVaKchlImaaj7JTeLHWXWF
ni1DjOycCC4N3iRcft1NihAzwioDnYTM5CZRsMWiOXvZCN1a0YvdIlvE84Av
BY1pRkgfyfpsc2+L8IoTZGAfM4LzWoMnzdQ/nf/OGv2+c2A6kPK+48Q2wctP
lROvfg4D8gEh0Q+3Ce581fhCv3OI/S02cPPjNnGeSUdKp+EcLufzc3sp/yb0
0khrQd/OYTdlPVVC6m/iqUmbkoHwefx3nXNzfPM30feRJaHm6nlQ6/ZGwOQP
QT4s716Wcx4N3JqXB+r/EBdExAxV3p3Hzv5U7odH/hLU4l2NTqzGsLBU9vO6
9ZfIWrgjLGtmDHYH0xPJ038JWbIq2fRkY1wadQzyZt/xb+9ztM+dMMa3KCMX
NcMd2HkiX1+byQQ7F6Y1y4P/cbLY/bgLJljSyd379MkO8P7XmX0n2QSjZF7V
11d2YFP6oDrDGxOQ/K+qtnPvxIOwtr26rBdgpPm+q810J4YuB2aIW19A2ftm
nWtRO3HSYX8RKecCjlOd+0Z6vhMFXxXHfy5cwBB3wmDbTjKoOpFPzgib4jIf
K42HHBn4jvpf9XA3RZaN6tCk2z/22kU0N5oiZkpS/0cJGXj2iDA27LyIN8/3
dHd9IkM3c3/dldMX0WQy7arPRY7B8APz/ZEXEdE0mZhgSQ7aHn/npYmLGHA3
D01JJcfLsl1cnVxmOLlEnmo5SQ6qYsqxC05mMDn3TGD+CAWOjmhblDSa4UYv
RYq4CQVCj8inkqjMIdJab6KWSAG6RzUu0Qbm0HjqNM4+QYGnLYrPjmeYw9LE
NbqHmRJPj23cDv5qDpnI13tVzClBdasyvIiwwF2zvJcPMihRnfjzS0K4BSRS
Ztzz5ighMUIfqTdjAZFTGY+SjlOhYf5R07XDlnDYROclZyqc46A0jFO2hHOP
Wfu+OipELA9H8V+zBKcDJRH7hwo6tGZ+PLGWoC5r/7qtTg3XJz4c4SRLtJ3p
StOIoMZLlthgq8+WOLJz7fCtCWp0rYU0ZRyygsWhPxLx3Luwxjo4pKNshbNM
sS8fu+yCs6njhMN1K/gwXp+Ib96Fq5PkX34lWsGZ2o4IpNmNxX39x352WsG8
LOOXleluMFmWhl1Zt8LwUCGtXNFupP8VOafFYQ2Jp/cj927vhmtDWEK2rjXM
pN9Fz2j/h+qXdZ6ufta40cUkW5X+HxZWTI7UlVqD1cKlOHT9P8j+9zbHbdoa
crasnA6n92DePECjYJ8NTI/enDr/eA+mbimImMAGYrd2cej/2ANW9fkHd51t
wGhUd8r8LA189os+Esy0AcXGXJFfHg22q7Jd9UdscJw7sq5h514otNQ7blDZ
wjTAdXq/2V7UpfeSjsrZouECx+N7DXvR8Vo459l1W/TNy945xrgPKhqCVksZ
trj25Qbr9I19+GlPI5s8ZovsF68Pdo/uQ2j10Rv9e+wgv294z6zUfrycq7G8
r2yHsdNmzfyJ+9HjrHKmx9MOtmE8y/nb+1H5XvVObKkdwg5PVJeL0sLzornl
4pwdBGjb7xXZ0OIshZFsH8sl7NDifKMeTwuDaKarCucu4Y2QY/XdXlrwTb3U
lnt0CcUV+nsu7ziAixYTGt3dl8C4s2f+q+QB5H580TxPdhlDqoLn2B0OoJH3
IWOS4mWoV6te/Z15AFGO6s2zNy/D/YOdXNDEAYjp+LA/rb6MJ+d8F57S0SHK
nKZKdPUybDWEUnM16dC2JvJJQfgKKp+9ClS5R4fvC6Gy769dgca3p/3RJDqY
3xTn5C68gtp62qaUTTp0bBdyUSxcwe8g6jALqYPIm/zZEsB3FQsBPx5Mux7E
I8tM38dXrmLve1uqo+UH0ZdTN29ecBWnczjPMy0fBHng65DWz1dR5mk7NSlI
j9RbSj+6Be1R8HNw29qBHuOtz1o9nOyhKZfJU1lMD02B2bsvKu1RGlE/0LtE
jxhZ0mTvD3ugqOpGpcgh7OEgLnnIX8P3X/+lXXE9BP3J9a4+/2swsuAZW6k5
hLMiivnDndcgK+pZpb15COlDspUhex1wNjByOAAM2PR6E7Nq6ADVHrWpR/cY
4EO2RrY31QE5PY23vF/84xDWqjdzDjAZCb6iSs+IlLhvFnYi1/HCZMBq5SIj
Pql86srx+sejJiIBuYzItrlWkt5+HfTUFRm/VhgRUDc3dp7WEYkB8lEXFQ7j
66G2fX0XHVEQZ/y++P5hCKe7c5IVOuJDzG3/pdHDePktYP7nhiMErbTN2bmO
wNI8SKxK3QlZV0nemm5HkH9AcUo8zgkvvom/cXx2BG7GwZ1eH52w3hkZF07P
hMdzDQvtzM6glrjeWnKJCcptHDcqVZ3x99bRwIEGJjAXKt6icnTGVOwk1cZe
ZpB7LX5rjXfGjNHnYF4bZnxnEH891+qMSz+KTtk2MOP8fiVety/OeEDRFVVO
exTveJyn7Bld8L5crWX/1aM4vKL1q0/FBbpBtWL32o7is1mMf6qjC/KDtQ3o
WVhw3lDecyLJBZE1lCktN1nQLuXy4V6XC/j/tIWFjbKgxy1rKH3dBdbx7jW+
J46Ba1/AGUEOV3h2SBfFRx1DMMefi/y6rmDaf4tuau0YKO3PH0n0dYXGLHuS
jiErmuoPRd0ucYVNav7291pWeNw8MDUy5Ypf0Vz+V/eyYeWYx74sGjfwLD6S
/w422DzuUPmk4IZJp3xWNjc27Hk1GZNz3Q2crPHsX3LZIL2+yjGV5oaDFGUK
ppNsSH+VsTds0A096f6uTrTsiHJa8Gwgc0dAzFLPcXV23KERDraWdEeIn4Lh
o9vs6CqFTcgVd3ziFuJ8XMWOYa2LUiIp7rg4RGNwcZEdnQdOCBkNusP/Ww/l
c04OFEfPe2xT3ADV7n228xc5wLTzkBqP3A3ENmukNsRxIF1tqHfY6QYsjAfm
lYc4kMpVrkyVewNfLi75B9Jw4uvpzpnmqRvQv7tV7KPBiV26xW//HPTA9S83
6iTvcWKqMeBel6YH5qLovhW3cYJl/useprseEGQYb5jbwQViSbB+o8kDn59K
XH8HLmR5/hmw+uEBmReHPHL8uHAjtCnZRNQTnxn/qoq1cMH1pOGlWXtPBK9y
6N/fyQ2R22d8NnI8AQNvlpKT3KBzaRZNf+sJXrM3wplB3HA57TA8yXITvseO
Mtj3cEMgtqyx6MJNMJQwXqPez4NfdfeIAwk3URw62XfbkAezKhENe8du4oRl
3ccXSTxYlWMMyaT3gsiW8aXNtzwo0dqzd8jAC1/KP1LuOs4LlUXq/KRoL/RS
MgX/dOXF+AUj0o4RL9iUXqjub+KFSM7nRopD3uj78NoyjJoPJZ5OlPnnvPHp
YOkVaQM+0H9WpPmS8E9/vVw+8JgP64K2eDnpDTvrIV6TpX86a+6Bi6y3cJG5
o31Mnh8d3b4/H9jcgk1bxH3NUH6YNbE7WObfwvd+J5/GSX60Xbg9/2bpFp7I
iNbxCB2HxJbUJwqJ22hM1jWI9jsOse81y2Pet2H45JgX+fBxxIYy+Rq13YaL
3ZiJN68AButOHg38zwdva1tEt24LQGmkX8/cwAeSbQYnQ4YF4MJ1uHAxxQey
SfpveQUEcUFOvkpg3gf2rUu2E3cEcUb64B9WcV9c//tePPuNIOzn5Y71+Phi
V1pW430ZIbTV0hQK9PiieJ+DR2iMEHR9M+XUGf3w+5fTYtmqELj4Rq8x2/kh
rXGj4JeOMMT5FaaKq/xwR/WutkOZMJ5djmPw3ekPKe+123toRdBScTHgHr8/
jFfTPk+4iMB973jAkp4/OnkfGE6PiODo8osvtd7+OBdLtD08KgrPKxcT3mX5
I86YkU9DRxR51uQXXfr8MW5UrZUVKAqWwkRa2w1/DHEx8qbXiqJhWTfiCXsA
TORdqpUWRXEzs6r2plYA2q9I/wxiE0NvU5ZlimcAbodLbrufE8OYpYkDb1YA
WuIyB2nCxPDczqqBaSAAUoUSD3XbxXCzJZnPcysAAjmSWirbYtDpk01R5AuE
VF+8xAcJcYx5NW04GgXiUPd/zjKO4ujXWmOluROIoBFaUeV8cezS+r55qCIQ
VOr0JTvei2MPic85bCYQ9Ko+PF7HTiCgT+qK2747ONTf9a74wgkk/Nzb1614
B1cpkkTS4k9A3HE6JPz6HfTUTVjpjJ7AtgRjaEfqHcShe7TtoASMRW2aHfvv
4EjC/q+b+hKg2cqhC/17B4nP3x/ejJJARfxPT2axu2BOPNTZNiyBwu85M2w2
d1F6R8Dl/CFJFJ7mVUiJvQtNSu+UxvOS8JJhCwjvvgtOQYWXy0mSoB6+kPVz
65/uVZz9Y1oSp6yfJUyK3EPb/mOlI5xS2Nxpayxjew8N4gyRoVel8GGX5cT+
xHuQpr/0k6VcCgKKXxlt+u9hbl01PnxDChPDxntOUARBJM6efxbSeC67XOYv
F4Scv/xuh0KksZpNSabtEoSihIfKYsPS8HdY/5OQH4Rb8dftpY7J4C7P7hy7
2SD4dca+4LWXgVfIvW9Vh4OhmPFKZ1edDPJpEz7f1QtG2nOBuQkKWchZGYW+
fhCMjbG+oEwDWYg5VbyqbA9GiZ+JjHWWLNgsb7488DcYTcc+UbGsy0Lr+Cm/
Ddn7kIgT3j2mJofO5TvvbG/cx9NHyRYRCXIAzbmdphX34XXUQ0LnixzyFlLf
Tizdx8ma7SeHlOWh6fElZO54CO6l3JWYj5PHsJn3zttXQvAjM/Fj55I88paP
6T7ODcEZ3WPc9WoKIMrVfXXnQiDl4qDdnKYAxfyFmAiuB/i4x6Nr6qcCtjQD
Ui1tH0C16SMlo6Ei3I7+yWjNfgA1L7Ug53JFiC82FVfPPUB8O8PQl70Egjpu
dcvxhmJW7a/XIwcCdnfP7jC6Ggqq4Y+sF18QGPoTZUFRHIqWj8zXzwkBplMf
Vk9/DcVwkCdj4CNgD9WBZzwnHsI4OWD23RpAVbVrJtnzIeSmes40Cyhhdt+I
XmHTQywLUdwvMFeCgeddXgOyMLzSyWWSjFLCTh0eh3iNMPwQC9uy7lTCC+tK
gZuPwsB4s4dfcksJ+jN/XH6MheEmdUNhiagyWEfKzhxkDQf1S9oH/ZeUoaDC
2zpwORzLM5uvE1OVQV7lPitYEQ75BO6qA6PK0DNSrRLYCoft6dcSMntV8CS1
72Sf2iPcWKO5t19dBfGXW5PpIh+hUvvWYKKfCp5FS7dvTz2CO0v9mdcNKtA6
0G/dSR8BjiY14cF1Fay/6xu2ko8A9Uphk7/oSfCuB8voWUdgnjyEWHI4Ca+D
3w/GhkSAh7uS/HDhScilPvokVBEBy11KNuSfToIuV0Pm6OsIaIwWPqngUYXs
xO27ljsj0XRh1pX7kirS9i9ob/FHYibU9IdlrioCQtLol/QjIX5K4cmleVVU
Lv44L3U7EvevWBCy/GrYngyOe5UTiXYeT4rJa2pY0WE4OzQQCYNmzqSzZWow
vheyxbkZCd2rNDFx39SQkvWGaZArCmq5P8NrZNRxmoKBd0wnCvf7F0RKfdXx
H7tIktStKPD8luC606GOg9y0S6u5UbA8lcouvfcUFNhux+8ajkLNKcePL4xO
gWyCjPbW3yjc246TPfX4FNRUVntPC0bjzFb75/yFU6D3VcYNk2jc/uX3cl1C
A+bhD6Z+B0WDs1jtpVCABqrDv9J/qI6G5N+ckXP9GpgO2WfM9z4anTkWfa5H
T8Pl3fLB3gMxEKDwabh77TR4tL9Wv1CKwfEbLo8fPTmNqQtVOULOMTBclHoU
R3MG0hG0OsuPY1D49VpmivkZRO7aYtw/GIOGPy7b2RVnwJzpYhexIxZaag97
Kik1sVZ+NclVLBaLT/+cfH5BEzNSjYy11rEwKhcqXCzXxN1UKgXTmFhwxDzV
YNmlhZiVfBvrzliMnK+6YWWphdbY5E+9P2NxZ29s5JMGLbD5W3MkCMTB9c8D
ahF6bVhPfbPrMo/7158AbZKTNnJOpFNeiIpDPtPpD04vtGFMtqmr2xkH2XNN
51WPn0VhS1NM4WYc7H9NE0ohZ0F9oYrpqkg8DFfJFC4vnIX8gTT+h7bxkIlY
3G46o4OL/YyU9EnxiItdlVMr0YHciPfSjsF4vBmOfhOwSxfBE+2sBlQJoE0H
7x85XVA88B79TzEBB6g2rhxx1MUZ4weqfO4JyHx7On40Qxc8LcKPi4oS4CS3
UiwxpguxkYGDse8TsJX7plBmjx5u8X148YE5EdNfDBPeK+mB6sDQSpJhIoKn
twKlPfXQJdaTUReWiEHPr75SpXroMCv/LdeViHzZ8dx3c3rQa/vKwr0zCXSd
f5iJY/rIMjVj9JBPwkiTJZXmeX08Kzu4KeSR9G+uOmL2ROr/882zQ1oVSXh3
bnQ7oFcfRg9OZb38kgTVcIFb5VQGsCTb50LiS8bqByeDRBUDxGnbSB20S8aB
DftBws8AMi5RC30ZybDYw6Ka1WSArLsat75OJ+NE3wj1800D3NnlMOZ5NAVf
tNVvV8oaQuH6t5lLF1KwcjZzt7WXIfw7Gj2aElIwOVLCOtFgCM1MY7ebr1LA
QjkhybJliL2H1vKSGFIRf/Zir5CiEYxG985ynEuF2rT65X3+RpgJujRLG5eK
Q1YZCa3PjCDD0nTJdiwVPgcDf5zedQ6dJtn8LIxp4GTjZSvUPocKqwvjcsZp
OH+W9umH6HOwvRLG9DQxDTY7j/hsT5zDz2vCEVmTaZgMiTq8znEeyTsUh5ZY
HiP4ublu/7XzYOCLvp5s+Ri3BfYsh9WcR4F4+ZeirMfYWll8JrnDGLa5gX3H
5h//66t0SbemMThiDz/zOpQOCTKu8NMJxhCSXW2NkU7HvMMOwydzxmA7pHJo
1iQdLB6G39kkTJB4XcPe9HY6qL9vufjcMUGenf1Vqsfp+BunOjw8bIKyhcO1
s63paEnZI8jLfQGgr1he+JAOx++TCd6eF9C9x6yYfVcGTtfTKA31XMD78+uB
wQIZuPBnRk+Y1RR7SyZ3MOtkQIUlc1esuymeCH0onXTNgKfq8/xdvaYoYT1O
+zwuAz99DgU85LiIEPpvGe8aM9B4sOIz562LSLsbOsk7kwElU73TL0cugnqS
UziBPBOnPp3fkyxiBr61YooTfJk4yrdeEBBqhv6/Vc82tDLRckmtIOSTGchW
FJ/PuWT+S3I+CbXq5jginOmwHZeJNk8yOppcc/ycsP0j15QJGe2YJ2FUFnB2
pu1Of5uJGgFHdVyxQPXgPhoh6iwIvb7mxNVrgfnWAMoZwSwk7Ir3S2e0xK5R
pk81+lmg62G10zpjCdX6tZnym1nIMkodj/exhNq6xYGBtCxoRXoO3q2wRDR9
X8L+jixom6mePvTREnNy4Q9cFrNwdfekmiazFSJZate+HchGLPWVAT49Kxi7
fB6JlclG+JT/97JgK/Q2Swues8iGho5M/7tmK4xkffh8Iigbn16Jezz7YYXP
AaqbQiXZ2K/zhNZQxBrJiSFyJ0eyYTr9qivuijXOxsQFum5lo1nc4kVYpjXE
fAYeN3LkIH117zn5N9a4ffyzEdOZHCS6pGRlHLaB0OFm8wiXHPjWjWy2Gdrg
Y81Be+bEHDypz8/PiLTBaX43lsaWHLS+19ipNGCD1qC1g9c+5eDiVznL9L22
SA0knxakzcXXVWe+Di1bZKYo7fwjnQuDVsv28oe2cO+W/TllkQuzFOZcuz5b
aMYqiXcH52L62KVTH/fZoffViYPNZbk4FDDIL6lnh7XxM9+aXuXiJufAmGGM
HbB39tizv7n/csbwzKlxOySflx/r582DybjtNC3LJWRPmmpP6+ShKk3OvdL6
EtRsWou+eubh+BkjTZGCS5g2laTZmZ6HlvnDDA9WLuGaU/Rt2u48KDhcftQh
cxkOzZG/mVfyoOXyxPtDwGVkk+4Hsh/Ox7r6yeyF3sv42yO3ekwpH4IXtmdf
MVzBeaNkdror+ehe7d9XaX0F/72PffPzUT4aVArpb5VdwYu6kdnBunzUTqW/
k/x9BRpngsfjZ/Lh6EzpOqd5FbWBfDaa1AVQWAnueJh8FU96VWkXhAvQSmOw
IPzlKtx/w9LxXAGY9h3/1q9oj5fHmdvHfQpwdk8wmXOEPSZN5FK5cwrQ4N+g
dOiDPX6KHFfUf1GAEXXKt60y15CYbDdn+q0ADz+3snmFX8PJe8xdYCoEzxXv
U8TcNehGrZNtKRVC8czePHpFByhTvM5/cLkQJKG+5L+xDtjbUlu3GFaIc8UZ
D8lWHMAdcoqFuboQD0v5Ftk0r6Pk9quaQxOFKOEZP2Gedx1PX+/RGv9bCDop
tuWnFI6Q4ipMsOAuwuDTsOKTNo5gKrdQyT9TBOWLSzTf2hxBlx3yptSpCJ3j
jvUDnE6wCvy96BRTBNq/3TZv7jnh66mXU/P1RcCi2QDrghPYxI/THHxTBLEP
ZTZ9PM44r/C7bWlHMfR2bh0oMHEG+eUPUu5cxdDwrPjAFeaM0om5kMxTxfD4
Rj+i0uoMoU3lHnf7YpxdTZqm+OGM557Kax8fFmOHyo7d1wVcQB5I8Wm9tBj5
QxfNfaxccIrFwCdpsBhPC6VXpBNcUNXi6DS8WowgmeSxtAEXDGjNXUqmK4HJ
c37RampXfHWz21gSL8F1PXEObyVXTBXHPO7UL8E+p47xNS9XfO7+2M3mWoLt
8p4gtmpX7NHw7NqIKEE3K8Mlyq+uyLr34bV6WQnI9vjWZR13g9GEIP/uvhLQ
MK+2/b7khtyBsG7ZzyVwzH/46lC2GyTv2NUMU5XCx6RKc/mtG24bM7wa4iiF
MjWXTwibO/IPL/0RJkrh8Jl2aMHCHa4Zuz/NGZdC44B09YF0d0SqnpFedS1F
OOuPJPK37kjalL2l+bAU28ZXdrZx3MDPhzsFv2aXInfD+5qO3Q1sTZoWjTWV
4m0/lV1p/g0UXwpT3R4uxXP5hYC3X27gnryF4IXPpThty2K+KOYBMm+WgM9/
S5HTMZra7+kB+fDEM3n0Zf/8M24prNkDA7qi3g/4yqB6RZtMkMoTPlIjn8Pk
yyDe7ZxYdNYTdE3MVkXaZSjaOOS1P8ET0gqGoVPmZRDJ3ed84Z0nuM0TdzI7
lWFwmfzcI6Gb4NZeVbP0LYOKSNSeCq+bEP18vT3nYRkSpey82zpvgu64wfCH
xDI8eWEY20nvhdBhlSqG3DLURwcYt9h4wfHl9UcSFWXYOun6vLLKC/eMen2k
n5QhXVVsI53CG9nLRn6H28uwmG6/GXbOG7uXzvoP9pbh6MUH328XeGOX4H1j
45dlIHFN0rv89oZJRHVv/qsyFFzJCb+ufwsXnEkhjZP/6u05m3Uj/xbOcgmI
BE2X4cS2V+rDv7ewvO2hRjFbBspfPC9rzt9G38zDk0L/+HrRcPp6+W0o9kiF
//r3/df1FDetPT6wvJ1y02qqDKuslqSWSz5wffRc1Wy8DMGNU+RGz3ywT16B
a+5fPa8mx3pp2H0Rs89HZvVfvddGZUsW/XzR+4EU7fWsDM168qe/z/gixThc
1qOhDBZvfbWElP3ATn6bdaakDBQ/ZZ3is/ww3vtBqDi9DN5CxY3J5P6YjKlR
Go0sw4EA3fhdUv5oDQOffkAZ6mqvy9Nf9UfBTYZCpn/9qavbTGpJ8UeI0GYA
j2kZUuvoy/cP+aMqv9f6uloZTCLpbpFTBfzzjbCNj0JlMLZKIEuTD4D0cbcP
D/7Ni4lZkcFblwBE7fvRpfurFA2fOwIG8gMwTuxQEJ0qBeX6Yq79bACi41le
sT0tRZgv6X314UAYLDcJMaWUYsA/1qJcLxA//HyHD3qVwmvzgYZFaCDMLSMu
UhqW4tXZpOFnHYHYKX/E4qNgKQLflSvM7rgDv6oK91LyUhz93d5Zq3AHTDVf
5I3GS/Dt6+KT0153cP/vssnLwhJcDnS+nlx7B2MEw22WWyX4kL1wonT9DsK2
ykyET5fA4pqe090TdyFf1lKzTV8CXt2jwWxudxGgMWnpP12MdZLu57tVd0G6
slu+IqcYAitp+6vX76I9q10y+N97tXuH141yqXvI3bXz3KZgMcguCWTe9rqH
LZnTtWRLRZgo+M7J/PQe2vW+3E8oLEKRA2dk+M4gqMwrMlXbFaGPxH3/tXoQ
bPU/vdQ+VoRrvcVlfx4Ggfmhnpz5SCGWOlprd4wE4esA3a83wYXgVHxr+I45
GH/k70x2yBTiZOWhM7m2wbiTYTSyb74A/iF0FjqlwThYc/pvRVQBOs/q2M3+
DIZYz0pWvnwBtnQ4pS+q3sc55SCZL2/zYRD+tq4j4j7seydtPe7980fq78Os
0/dRkG5CqcyTj70mv/2vC4Zg6hmdsHp7Hl40Lj6tuBWCRLslIX+LPHQYs0V/
7Q3BL/eZyIWNXNhT3ac7zvIApXbg8wnLxVXdxvO2Tg9gKMhPIcWWC/klxvsZ
bQ8geW3Df395DvTCFl5+YAiFWdugGqViDhxp/FzEHELBL3z69MGubByk1Ml7
0BaK4+cZRyXPZuNhF0PbtyMPMVnyJuTqyyy41mwecXZ9CA1OapsigywQ5HkH
yF88RIh6XePPoX/746wzQzlPGFLu9mnraGdC+r+b6d6BYehW3EJJRwaEnnWL
X5oJQ4DxF9YD8hmgVvA19VAMh+xywKJXSToO2M5VlaaEQzTzGP380XTw8afP
0v0Oh5fmLqoKusfw4nkemWv+CLtaAuVT51Lh+ozxzvXWR3igYhUbU5kCdWuy
5hq6CKh5/LeY6JWMxLwNXn21CPRHDPBWyCWBVoz9a9jNCNQ/VTKc+Z6AbSvt
3deKI/CxMPnx8aJ4+FZ7uC7ORiDEWf9q0oU4bPC9EjzAEIngD/lnpCliEbe2
pTStGYkMtUtse/Kj8dnq9VPDwEiEUybSs6tHgWPfTL1HQyRmDezz701HoEmR
5qz6aiT29v6+FfYuHAmPKNI7+KMwntyuOr8diu8fuMZ/WEehSWRdWI4mBFZh
CTxTKVFo1dx6UkgbBK0axzbPV1E45T7ja/nfHRw6XL7QSxcNtrsmljTf/GD/
w/3txNloFJ+uuxPd5IUXelvfc0Oj8XP+zMd6FzewOj71Fn8ejb/ROyN7ue2x
O+l+jx91DEYHX+vwB17AUcScilSPgRqtk1UbyxbxSC7R9GpQDGozC7/e+2ZC
ivFb8PyvKwadRQMnJrXtSZvk9w957orF28daGl7v3EiKP5VqKs7E4seRiIiv
pd6kLs22maawWFzqODP+usOf5ONbzZ08FIsP1iG3aBXukjRbhll1GOLA5GGt
29EQTPppsdtp0jQOQztUJ1OJUNJcyL0mlcy4f/N0wkO+J5y0w/h1Q/BCHF6+
vp7OIhxJqj9xgL1ELB5V0gm7mDejSFsPBqprvONhZ3FOfLY7hmT++rJSdns8
hnew8UsmxZHMqTbjb+1PwCsrr+aZ6wmkviPhCYRpAu4/LLiTdTKJ5HtKlG8l
LwGqmZPPlJlTSOoGe6Wi/82FjUyVr9d6Kun02UeNx1UT4bv7og31wGPSr1Lv
uoboRKyM7PuoP5pOut6+R+bkh0Sc5CHMgp5lkJ4G0ev1SCYh6s/Gws+KTNJG
OxO7/v0kyOxME7mbnkUyrvQYfDP5j0VkMnY8yiYlDbtEOosmI6tvwF/NJ4eU
pn0pfW9QMuQf88/wXcslNcdNn6yfSsb30g/JfsZ5pIXQmhduEinY+EZ2iUUt
n1T5WSruZFgK2o+9bRoRLSCViSlRCcyn4PHbzFUP5kKS5SerMCGVVLBQHeEf
oSgivdfZmXc2LRVNaTzmT74UkYp9vF9HbqXicFqh7ebLYlLdW5XaTZM0UDJ8
+2JWV0KykqWZeNiQhifnScEViaUknZX5L5pMj3GQc6yQ5FVGaluxz5S//Rhz
gUyT+QLlpLIPQw0WM49B8Wd5mzGxnHRzne7vG/Z0GPFzTdNSVpD2TYhyFhqm
Y3iyKd3DqYJ0PLFXjuF+Ouj5Li0IjFeQKnofKHI1pUPrTNV7OlSS3NZP8Y+t
pEOvr1p9b3Yl6c0ODjJhngwECS2ZbFNVkVh3Rb4UupiBTfGczZbLVaTbGt5F
r6L+5XChzAz5zirSIxvVbKGeDCQKKl3V4qgmaUwsToiRZYJPae3g8K1qksVz
RvePcploqDp+sOxlNYl7XjhZ2z0TLwRKwkk8NaSLzxwCr5ZmQuS6lsN7zxoS
1ZkNa4WFTMz6HzL+1VFDmglZv93NlYWA5wsvZmhrSQGkdEZaqyzs8g9huWFc
SxrJsQ049C8H8y7u941PqSWN03zZPzmZBR2/d3u539SS7tUpsNkwZSPly8F3
W0fqSDUBfQzlJtnYsS5Pu6lfR5rtT7VoT8zGSEl7w+/gOlKZirZj5kQ2HBtK
GOfq60ga7SeatY7m4GR8R1D4XB3pcJ/Xyw7zHNRLmsSM760n6VKISdFm5qDy
lsmeTLF6Uh3v9dvCH3MgbfpjZ49uPYnmpJkSp0Au5CpL50Wu1ZNqpey4V51z
EboxHF3lX096Fy79KqkuFxSX/A0lI+tJW0Vfd3P+y51xu/78jk2pJwUoCno/
PJUHydqUzdrMehJojy+9jshDTs36Be+setKC6Izovsk8rNhFf2xLqyedsGU4
KvjP54oX9gm5x9STjL4/CJdyzYe/s0+86916kvgUhYsoKR96hlreWY71JEaF
GzVH9xbg9qgr75J+PUlK4eD5P6YF4BrZ2iH97z5f5bwujBcV4I3b29Cru+tJ
R8za+kq2C1DDIXnHcbKOZOSd3x1wthB6lOGLonl1pLjLmQ7nMwrhqlPHk+pQ
R2LMIJsT+14I6uh46gyBOtKYIcNl+n+57FDE6Y8CH2pJA/2q4mTpRQgLM68W
jqslHdcQifjzowjPm5UPpCjXkh4yDY3Q6BRDq6rK/MrHGtJr43Rz0fxiVKob
jobcrSFF9JfGOZCVYOq3aOJP5hrSvsu9K+1mJZiW0O4vLa4m7fqTtajQWAL+
jcMl+VLVJJekedpxxlJ4D/XEfWioIkkfuvo90aMUdTYR/DZSVSQ6IRXZoLFS
mK7cN+QtriT17toITpcuw8H029ekmCtJZ/mTEr782+vFi1TkEu5UkLZfrAg5
/i7DvsPdjOfnykn17zRD6cXK8UEx/6efUjmpyjImjta2HBt+j8jUjpeRflGK
CpbEl8Pcu104s7OEpGuVofaltxy0m+tzyueKSSutme8GdlRg7YuMmeHrQlJa
r+zuC1IVYD3TUrJft4DkqtHb8dChAgp3pNfKGvNI5LIiAvZZFYiRumzteSSX
9JSzQ399ogKafz47lDpkk4Sz718UOliJwbKJ/qzqTBKtPI8To1Yl/ltSKihe
TSdNWNDWV9+rxAkuN77TGmmkgpGYa9QtldiXzWUxmZBEMlJcaz+wVQkzn0dW
b0fjSF6b16nGpKrw84DrlOyOaNK50/Ze59yqYEhVnZohFk4yLbjtGFteBQbR
vfxQDiJJ3L+rGLtcBTy0z6uyvk1SlGxTMxaqxq+5ao3LtFdI8izLS7MO1dg0
zfnxlV0fsjq62WIl1TC/Pnoz/cwNeGuOT2stV6NSIkg45+gdXGSRZJYUrYH8
Z+ddRXmh4Gxdmv7iWoPx/Y+PTrJHIX7Mq86jtgaCA1ofd3jGwTbjgtzoZg3W
I4WXXw0lQdJYgnKPUi002/J2z4k+hv+z+adMQbWg2Wcaofs8A38Fi+mo+2pR
knWnpWkzC6Pp/I0v6etw6TwDy6d//7FJQLSbv1kd7LMfKv8xzUeC4zOqg3l1
iLR6EMP9oBAhgYaqYat1ONTCe9evphgU75sp1xTqMeLC3sX35l9eKHQTUg2p
h7xe4NBR/3Js8f3KDRqrh8veWub34RU44kN9uYmrAaejxC47JVXi3P2ca5/c
GrBSuuOIRmYVGhTVm/a2N8BaKp98LacaXlofr4ocakRdqGr8SnYNTvEff6R7
uRHVSsb0nWm1cL5xW9e9sRH2PzVbv0XVYWeH4FTqvifwa0/h2PSvR25nuP2g
zRN436mQNLnSgAP9R4j9jU9wPeVMaYRGI7hb72eZHWhC4XFvKTb2JzhydXO1
+WoTRov2VgSvPgH5cbpQqWdNuLWs7XuqoQlnOY5MdrE8xYO0H22znk+xq5zV
xMPrKWatVStGBZtBbc0arDb2FBU7NoYLXjXjiQHLmoxEM1youEzfeZJwd01L
3DC6GcenL0jeoWpBruSJxaRvzRhIlqnR0WzBAtHTS2tEAh6UFh190IK3zjnh
DXUkiCqJhla0tSDg138+L/a2YM+nDZtX6y0YGOV1NlFqwZlArX0mbK0oMep6
dM+tBY3drEbkaq0YvH9sSD+vBdMtC2w51q0IqXwo8myyBS8iczP3e7Viqaq0
eJy2FdJtr30Z7rdCvNJVN1a9Fdn9N38+etSKyU0B/q3brdheTmU2+sdSvHma
NNWtUNh+N68c3ApfX2K4Z7EVb5NOekt6toI9cfmtDFcbznDYSdFZtOLOyWvp
xmZt2GDi+PqUaIVutgQhGN8GZErt42BoRX9W8WrNUBsCvT43Csy1gDJB8OcG
zTO82Rv7t7eoBc9OMMetazyDttarpY2rLbj8hIyx9N4zBJdeas1nbYGEf14f
z7NnOEEfQlafSMK79GP0VjvbUVJ7k+B93wz6g3OaFkrtKD5ELVDM3AyH7z/e
cPr/06kKKcxOPsUr/nm5ipZ2/GnvCDS50AQW+Y2J3WQdyDyzStlr+QT/hYsQ
oqod/3KHbuuHc41IeOP5hSe4A1R/n0y/V2iANGX5jZWeDnzov5y6/2A9jA4/
d3m0vxM70nvsG17XgrNn2p/KqBNCrh7fFSJr0Mipp2mc3ImdN7Jld8hV4+zD
6YDgd504f0Is2G2kEoKczW/ijnfBXanX/4BVBcIdGtlC3LpAX36Cr7mlDPf0
tQ5ZPe3CUM7p0bF/+XbKuzacfVc3nl+Jz33sWoCiNbarfQbdkH2uoGHBl4uL
4jUhl9O7cbtnms+5OxOtno3Ta0vdqCv+Ju+fn4bSW5UWrgrPYb9bb+VxUjwK
/D32LoQ+x+Qr232X7COw2GS4ZjL1HEkq+6XlpAJxjUOYo1uoB9xZufFc5KZY
DYxplPLvgd8XmUcimp6k7YML7/KHe/C5WpDDfOQB6ajBrRfsfL245qWYd5wu
luR7Jr8y26cXJ/PLwkc7U0hispsTEiO9uBTMS8mgkklyStWIHRV4gWiloPFd
nLmkY7nj8g/uvsDe07Ft/BSFpOfUvifOTb8A7dbqQaP3JSR3+aZFBdk+KEv/
2i0yU07i5fo0rRzbh3dewkz3n1eSqNnORF1Z68PVSRW+hLJqEuMdpbhq3X48
3HV2i4ioJUn6Wwfxl/fDgfrLxQv29aQ/vlm7e2kHILDM0Nmp0EhKm/V4meI6
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
KOk5FIp5Ski4k7cP8/8AeKqfMw==
             "]]}, {}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
2cikSxOUrSJ3blGcN6y92BLumY/8e6uIHXCUH/7pxSbO4uRwC62hSBvyZZzZ
Pqzs3tid365rKPlprlZPUz/GbFN4JaZ+DbFdMmPezB/A4sV7lwhxPyNdG9ao
5P8GMceMEC4Vmc+oRddngzFpCKM3eZPhEPoZXcmYKtFVHsY6uQf3HMY+I07j
l3lqE8PY3EDFlPq1dWSFTVLH6I9gbsOIhNpkHTXyDMvJbo9gRjbEjxsK11Fn
bFp5mM8otj3hE6Pwex3t8jIehV0Zw2pr12M6JTdQzLTJtnXlGKav4gm3wjfQ
nmXxey2tcQzvTYpnwPwG4nSu9HD8O45Rj0zIjXJuImoW7pvf8icwmo947yhf
bKJZ09qKbb1JrJ/OwU+lbxOJjIqkZVFNYW8CcciCab+gNnP9WcmxKey1M49W
i/UXdOm0ZvIgdhoTF1MMPGn5ghIiLkfvGnzELn9+04tRbyGCiIcfzPlmsFNr
3sdBz7dQktNryzdnZ7FzatEvF1u2UMe5yo7kz7NYubfxS5krXxHrfJtrX98c
ltFQWNps9xXJ+l6jflg9jz3VO++r2vcVLSjHkzsXLGB3rGsenbB8Q7yeeN2W
OYuYuFxHfrvPNxSu4DciprmEeQXewC1a+IameaZDbOaWsCTbubU6sW3EklU5
u2P2CbvdyvxzN2kb1UcMsK/uf8Iif/oPqJ9sIy//sT9WwctY7DIhy5red4S/
sURSzriC1e/KVOQ2f0cPqWgk5htXMJL+sXS1izvI8fDfxjJcxW7wV49/k9pB
FGU9VC/OrmF4d4/0b7ruILrlPz8lK9awSV7du2cKdlCZrm5Y/L/o8VajX99v
aQeJXhV2yaJfx2YlXEezqXbRrFhFQ/L8OibyfinRQX4XVdxZ/J6ftoGdvfat
a8NnF8nzkXERWm5ickY4NudqdtHVphauRbEv2FoTScHUzu4/P7/40JJyC+PI
yUl7yP4DNSP91tUfW5h6DrObv9EPNERooeYz/RX7GZFkZJH8A4U0rNW87PiG
/dm4EIM/9QMJEgW/vVS7jenE+ChpXvyJvvlp6r6q/I6VT++NGSv9RFWeYxOB
ejuYU3CS3a3X/+qd06QnKzvYYNQn9+run+iWt5Jwi/UuFtzi/+AM0R5KWCcb
PPqzi2X1FEtQyuyhmIxRu4GIH5hXDsnAF/89RAVR359w/MSixOd0Qjr30IPf
d+Unu35ib+Qvme4T7aNTg8yex8/2sO5Aa8tbD/YRnvHXo8sX97Ef0qGHwmH7
qFjlSsedpn3sjwDBO8qRffS46YrNut0BdsXX/3sn1QEiw6ErUOP4hX2W+Ryh
+vgAdTEpZ+du/MLiZGW5q9IO0FbgZ/Lrhb8xcTx2h6ONA6R+PZdl0eUQY6cI
vE7H9wuZePR0MN8/wjhnfmzfcP+FJsUFXBkYjzGutKLSC+2/UNfBfQ8SnBOs
frZbbJ3sN1ISPj/H8PkEG9sUfpaj8xudJpTZxo/9wcbpDxi0sn+jFb654w/d
p9goO53K4d5v1BZIyJ/V8RdT7CbaeSN5iOYCZ9f0THGQ0roJHm3UIaJkIOq7
8hUHCV/Qj8xYOUSr3fvi7C64SBxVlN8UPEIjm4OLHwjx0DjuTGBR4BFCJZFP
RhPx0C71RYE7s0co/mVAVuVtfNStELXVzXOM9o62p/xG8FHqeMYXY/9jFBl6
9aGR4xlk+6PGhWTuGLE7N/a/oCVAVy8kr3TcPkHp0blSxz0EaEjUJzgq9AS1
qg/dIPUgRDF/+IZcP58gh5ZCiUVBImSew87iJv4HlRRd+Ja6R4TOEVQTxr/7
g3LXRX/71pxF562Yj6aP/qDO9896q16dQ0QqfeGgfYqkXXufOmieRzUs8uZD
1afo89HIq61bxAh38B1L6JW/aHWAOOQRGQnSNxD3cnvxF1HpqxXs7JEgRsvH
t5MW/iJ3Pp+D3WVSZDZhHeDOiAO8Nv9px0+ToZ+RD+2kNXCAuCSwnmmSHOFu
LsgXB+LAvN9Zwk0rCvRNOYu0oQ4HvtYsvN/bo0ATeG7lVjs4EEzmNqbpfQE1
eVtItbPgAsXCE/HbFBfRQ/mVrtbHuIA2LncXZV5EH1YalZ9H4oJ9ca7Nd+wS
4iDU/NnUgwsq1BputHOX0AhL/HArLh5kFZVaPPGiROY36Umc7+JBtivTpUU2
KpRhLDUy64AHtOl+qT0TVCh6TlDtoBAPPjGppz4IpkbzPcTdXRt44EzOQBEu
QYPqtRfs1W7gg3yi/tMe3MsovH42Id4AH7bH0nPYui6jIccnr5Pf/cPqfCbz
kVeQ5Df8dwaz+MBORjJEZ3oVaWu2ca5fOQOE5Y/7GNE15NR3Jplf+ww40Cr9
uk5Hi3haqrWlE87A6AOzOgWC60iuwWaaceYf7pXQ3vx5HRlo20f1XiOA80IL
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
nQK9mP8HXrJKNg==
             "]]}}}, {}, {}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 10}, {-0.662794736644159, 0.860741307974148}}, 
         PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Small, LabelStyle -> Directive[
           GrayLevel[0], 8], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Au\"", TraditionalForm], 
         PlotRange -> {{0, 10}, {-0.662794736644159, 0.860741307974148}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"s\"", "\"p\"", "\"d\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 8], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "8"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.648385047642466*^9, 3.6483851184685783`*^9, {3.648385166819322*^9, 
   3.648385202739766*^9}, {3.648385343697637*^9, 3.648385348210586*^9}, 
   3.648385408332135*^9, {3.648385447569161*^9, 3.648385479578062*^9}, 
   3.648385509986641*^9, {3.64838556962191*^9, 3.648385587352044*^9}, {
   3.648385637261609*^9, 3.648385643053659*^9}, {3.648385918383449*^9, 
   3.648385942732637*^9}, 3.648994441876429*^9, 3.649059461129632*^9, 
   3.649064052635219*^9, 3.649410528628852*^9, 3.6494105768159037`*^9, 
   3.649426261064349*^9, {3.66486851548486*^9, 3.664868554050528*^9}, 
   3.6710872025870247`*^9, 3.6710877821331997`*^9, 3.6710883629600077`*^9, 
   3.6710885247672167`*^9, 3.671089815236967*^9, 3.671878161717572*^9, 
   3.6718782546330557`*^9, 3.672039992782351*^9, 3.6720401176199636`*^9, 
   3.672041621421068*^9, 3.672061382459818*^9, 3.6720614654779863`*^9, 
   3.6720615089836187`*^9, 3.672063265138999*^9, 3.672137305859373*^9, 
   3.681708142726914*^9, 3.681708958741644*^9, 3.681709643446422*^9, 
   3.681724741687654*^9, 3.6817250170663223`*^9, 3.681726015158391*^9, 
   3.68275561815163*^9, 3.695636284785965*^9, 3.695636332210388*^9, 
   3.695638366709818*^9, 3.6956384096717033`*^9, 3.695638553367094*^9, {
   3.695638811009375*^9, 3.695638824732573*^9}, 3.703330041803643*^9, 
   3.703331003912344*^9, 
   3.7033312440868797`*^9},ExpressionUUID->"11738b55-c79d-408d-b090-\
ac4457360255"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"aB", "=", "1.889725989"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Angstrom", " ", "to", " ", "Bohr", " ", "radius"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n4", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n5", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n6", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n7", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n8", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", 
           RowBox[{"R", "[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"R", "[", 
              RowBox[{"i", ",", "1"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}], "<", 
            RowBox[{"3.0", "*", "aB"}]}], ",", 
           RowBox[{"tmp4", "=", "j"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"R", "[", 
                RowBox[{"i", ",", "1"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "1"}], "]"}], "]"}], "<", 
              RowBox[{"4.0", "*", "aB"}]}], ",", 
             RowBox[{"tmp5", "=", "j"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"R", "[", 
                  RowBox[{"i", ",", "1"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "1"}], "]"}], "]"}], "<", 
                RowBox[{"5.0", "*", "aB"}]}], ",", 
               RowBox[{"tmp6", "=", "j"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"R", "[", 
                    RowBox[{"i", ",", "1"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "<", 
                  RowBox[{"6.0", "*", "aB"}]}], ",", 
                 RowBox[{"tmp7", "=", "j"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"R", "[", 
                    RowBox[{"i", ",", "1"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "<", 
                    RowBox[{"7.0", "*", "aB"}]}], ",", 
                   RowBox[{"tmp8", "=", "j"}]}], "]"}]}], "]"}]}], "]"}]}], 
            "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"n4", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"n4", ",", "tmp4"}], "]"}]}], ",", 
       RowBox[{"n5", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"n5", ",", "tmp5"}], "]"}]}], ",", 
       RowBox[{"n6", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"n6", ",", "tmp6"}], "]"}]}], ",", 
       RowBox[{"n7", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"n7", ",", "tmp7"}], "]"}]}], ",", 
       RowBox[{"n8", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"n8", ",", "tmp8"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "species", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"n4", ",", "n5", ",", "n6", ",", "n7", ",", "n8"}], "}"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<d/s ratio\>\"", ";"}], 
   "*)"}]}], "\[IndentingNewLine]", "species", "\[IndentingNewLine]", 
 RowBox[{"div", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n4", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n4", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n5", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n5", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n6", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n6", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n7", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n7", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "3"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n8", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"i", ",", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"n8", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "species", "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"div", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.9", ",", "5.1"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"species", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "species", "]"}]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"i", "+", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "7"}], "}"}]}], "]"}], ",", 
      "Automatic"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6956363473098373`*^9, 3.6956363558960943`*^9}, {
   3.695636499487109*^9, 3.695636795173897*^9}, {3.695637134332602*^9, 
   3.695637597402212*^9}, {3.695637802712257*^9, 3.6956379593588142`*^9}, {
   3.695638021879507*^9, 3.695638024070653*^9}, {3.695638093319099*^9, 
   3.695638096527255*^9}, {3.6956385784301987`*^9, 3.695638601655797*^9}, {
   3.6956388295936003`*^9, 3.6956388496574574`*^9}, {3.703330503910408*^9, 
   3.703330649059155*^9}, {3.7033306961038647`*^9, 3.703330696430586*^9}, {
   3.703330755648017*^9, 3.703330790215819*^9}, 
   3.7033310092890453`*^9},ExpressionUUID->"c5e3ad32-f88c-4504-bed6-\
436efd523c41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.44323130503066155`"}], ",", 
     RowBox[{"-", "0.42603393553119073`"}], ",", 
     RowBox[{"-", "0.42712547482045204`"}], ",", 
     RowBox[{"-", "0.42817463771705205`"}], ",", "Indeterminate"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2708290495121187`"}], ",", 
     RowBox[{"-", "0.22038709972324197`"}], ",", 
     RowBox[{"-", "0.2068453697683175`"}], ",", 
     RowBox[{"-", "0.2047918588388887`"}], ",", "Indeterminate"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.27539942953631563`"}], ",", 
     RowBox[{"-", "0.22898301361226783`"}], ",", 
     RowBox[{"-", "0.21708245842486992`"}], ",", 
     RowBox[{"-", "0.21534565138184164`"}], ",", "Indeterminate"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23760563925738018`"}], ",", 
     RowBox[{"-", "0.18808113106400562`"}], ",", 
     RowBox[{"-", "0.17468551779592725`"}], ",", 
     RowBox[{"-", "0.17260293173238136`"}], ",", "Indeterminate"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.695638851937812*^9, 3.703330653743785*^9, 3.703330697290472*^9, {
   3.703330759257175*^9, 3.703330790992649*^9}, 3.7033310101047773`*^9, 
   3.703331248427205*^9},ExpressionUUID->"abbdf75c-ca69-4465-b114-\
942c2f928e32"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.44323130503066155`}, {2., -0.42603393553119073`}, {
         3., -0.42712547482045204`}, {4., -0.42817463771705205`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.2708290495121187}, {2., -0.22038709972324197`}, {
         3., -0.2068453697683175}, {4., -0.2047918588388887}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.27539942953631563`}, {2., -0.22898301361226783`}, {
         3., -0.21708245842486992`}, {4., -0.21534565138184164`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.23760563925738018`}, {2., -0.18808113106400562`}, {
         3., -0.17468551779592725`}, {
         4., -0.17260293173238136`}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0.921, 0}, 
     PlotRange -> {{0.9, 5.1}, {-0.44323130503066155`, 0}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.921, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.9, 5.1}, {-0.44323130503066155`, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {{{1, 
         FormBox["3", TraditionalForm]}, {2, 
         FormBox["4", TraditionalForm]}, {3, 
         FormBox["5", TraditionalForm]}, {4, 
         FormBox["6", TraditionalForm]}, {5, 
         FormBox["7", TraditionalForm]}, {6, 
         FormBox["8", TraditionalForm]}, {7, 
         FormBox["9", TraditionalForm]}}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"W\"", "\"Ir\"", "\"Pt\"", "\"Au\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.695638851937812*^9, 3.703330653743785*^9, 3.703330697290472*^9, {
   3.703330759257175*^9, 3.703330790992649*^9}, 3.7033310101047773`*^9, 
   3.703331248578076*^9},ExpressionUUID->"cb4abc5b-8d18-48fa-93fa-\
88c387d057fd"]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"571bec99-b74d-4e37-bb4b-2d8b73950e48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"4", "TH", " ", "ROW"}], ";", " ", 
     RowBox[{"3", "-", 
      RowBox[{"7", " ", "Angstrom", " ", 
       RowBox[{"(", 
        RowBox[{"originally", " ", "in", " ", "Borh", " ", "radii"}], 
        ")"}]}]}]}], ")"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2801435087805844`"}], ",", 
      RowBox[{"-", "0.2461805895860931`"}], ",", 
      RowBox[{"-", "0.23849761674752165`"}], ",", 
      RowBox[{"-", "0.23757368515349458`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2243263776683928`"}], ",", 
      RowBox[{"-", "0.18513056819003626`"}], ",", 
      RowBox[{"-", "0.17559723419436457`"}], ",", 
      RowBox[{"-", "0.17422055449159968`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1825523411495038`"}], ",", 
      RowBox[{"-", "0.14478585211512932`"}], ",", 
      RowBox[{"-", "0.13399814379650177`"}], ",", 
      RowBox[{"-", "0.13253871420600744`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1531326092400517`"}], ",", 
      RowBox[{"-", "0.1151837529516369`"}], ",", 
      RowBox[{"-", "0.10520295386182124`"}], ",", 
      RowBox[{"-", "0.10363980430695396`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13042111956926866`"}], ",", 
      RowBox[{"-", "0.09416058398534254`"}], ",", 
      RowBox[{"-", "0.08438873860790062`"}], ",", 
      RowBox[{"-", "0.08281000809714402`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1123942856287139`"}], ",", 
      RowBox[{"-", "0.07820520092870693`"}], ",", 
      RowBox[{"-", "0.06888906583213937`"}], ",", 
      RowBox[{"-", "0.06736099420430287`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.09777004830681256`"}], ",", 
      RowBox[{"-", "0.06579378439795425`"}], ",", 
      RowBox[{"-", "0.0570680608567388`"}], ",", 
      RowBox[{"-", "0.05563218572841743`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.15729991219935532`"}], ",", 
      RowBox[{"-", "0.1303718444864746`"}], ",", 
      RowBox[{"-", "0.1237593375552344`"}], ",", 
      RowBox[{"-", "0.12280826905645387`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "3"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1149", ",", "1152", ",", "1156", ",", "1159", ",", "1162", ",", 
            "1165", ",", "1168", ",", "1171"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}], 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1149", ",", "1152", ",", "1156", ",", "1159", ",", "1162", ",", 
            "1165", ",", "1168", ",", "1171"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "3"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1172", ",", "1176", ",", "1179", ",", "1183", ",", "1186", ",", 
            "1189", ",", "1192", ",", "1195"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}], 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1172", ",", "1176", ",", "1179", ",", "1183", ",", "1186", ",", 
            "1189", ",", "1192", ",", "1195"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "3"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1190", ",", "1194", ",", "1198", ",", "1201", ",", "1204", ",", 
            "1207", ",", "1210", ",", "1213"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}], 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1190", ",", "1194", ",", "1198", ",", "1201", ",", "1204", ",", 
            "1207", ",", "1210", ",", "1213"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "3"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1205", ",", "1209", ",", "1212", ",", "1216", ",", "1219", ",", 
            "1222", ",", "1225", ",", "1228"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}], 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1205", ",", "1209", ",", "1212", ",", "1216", ",", "1219", ",", 
            "1222", ",", "1225", ",", "1228"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "3"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1218", ",", "1222", ",", "1225", ",", "1228", ",", "1232", ",", 
            "1235", ",", "1238", ",", "1241"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}], 
       RowBox[{
        RowBox[{"R", "[", 
         RowBox[{"9", ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "1218", ",", "1222", ",", "1225", ",", "1228", ",", "1232", ",", 
            "1235", ",", "1238", ",", "1241"}], "}"}], "\[LeftDoubleBracket]",
           "9", "\[RightDoubleBracket]"}], ",", "2"}], 
        "\[RightDoubleBracket]"}]]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.703330933847961*^9, 3.703330965175478*^9}, {
  3.70333106247371*^9, 
  3.7033310932411203`*^9}},ExpressionUUID->"b2a916f3-04bb-49e3-9993-\
7fdb67185061"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.2801435087805844}, {2., -0.2461805895860931}, {
         3., -0.23849761674752165`}, {4., -0.23757368515349458`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.2243263776683928}, {2., -0.18513056819003626`}, {
         3., -0.17559723419436457`}, {4., -0.17422055449159968`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.1825523411495038}, {2., -0.14478585211512932`}, {
         3., -0.13399814379650177`}, {4., -0.13253871420600744`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.1531326092400517}, {2., -0.1151837529516369}, {
         3., -0.10520295386182124`}, {4., -0.10363980430695396`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.13042111956926866`}, {2., -0.09416058398534254}, {
         3., -0.08438873860790062}, {4., -0.08281000809714402}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.1123942856287139}, {2., -0.07820520092870693}, {
         3., -0.06888906583213937}, {4., -0.06736099420430287}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.09777004830681256}, {2., -0.06579378439795425}, {
         3., -0.0570680608567388}, {4., -0.05563218572841743}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.15729991219935532`}, {2., -0.1303718444864746}, {
         3., -0.1237593375552344}, {
         4., -0.12280826905645387`}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0.921, 0}, 
     PlotRange -> {{0.9, 5.1}, {-0.2801435087805844, 0}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.921, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.9, 5.1}, {-0.2801435087805844, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {{{1, 
         FormBox["3", TraditionalForm]}, {2, 
         FormBox["4", TraditionalForm]}, {3, 
         FormBox["5", TraditionalForm]}, {4, 
         FormBox["6", TraditionalForm]}, {5, 
         FormBox["7", TraditionalForm]}, {6, 
         FormBox["8", TraditionalForm]}, {7, 
         FormBox["9", TraditionalForm]}}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Ti\"", "\"V\"", "\"Cr\"", "\"Mn\"", "\"Fe\"", "\"Co\"", "\"Ni\"", 
       "\"Cu\"", "\"Zn\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.695638851937812*^9, 3.703330653743785*^9, 3.703330697290472*^9, {
   3.703330759257175*^9, 
   3.703330792461989*^9}},ExpressionUUID->"bfa6c4bb-e55e-4b10-89b5-\
93875183fbc6"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 3},ExpressionUUID->"ec09c143-b630-44f5-920a-1819c49788fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "TH", " ", "ROW"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.35035281826217074`"}], ",", 
      RowBox[{"-", "0.3102758888325367`"}], ",", 
      RowBox[{"-", "0.3017053395930674`"}], ",", 
      RowBox[{"-", "0.3007569850534154`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.24041551075006282`"}], ",", 
      RowBox[{"-", "0.18913481006691102`"}], ",", 
      RowBox[{"-", "0.1762443107722583`"}], ",", 
      RowBox[{"-", "0.17427486859916763`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.19937249482197295`"}], ",", 
      RowBox[{"-", "0.1485796997820161`"}], ",", 
      RowBox[{"-", "0.13556934066751972`"}], ",", 
      RowBox[{"-", "0.13353470799809597`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1657773945051138`"}], ",", 
      RowBox[{"-", "0.11714557362241426`"}], ",", 
      RowBox[{"-", "0.10471075654167186`"}], ",", 
      RowBox[{"-", "0.10276249443283637`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1381568259098598`"}], ",", 
      RowBox[{"-", "0.09386835932846183`"}], ",", 
      RowBox[{"-", "0.08119535314979708`"}], ",", 
      RowBox[{"-", "0.07939929972945833`"}], ",", "Indeterminate"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703331032663124*^9, 
  3.703331041820231*^9}},ExpressionUUID->"6c1701f7-042a-4264-9066-\
d8c37829e155"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.35035281826217074`}, {2., -0.3102758888325367}, {
         3., -0.3017053395930674}, {4., -0.3007569850534154}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.24041551075006282`}, {2., -0.18913481006691102`}, {
         3., -0.1762443107722583}, {4., -0.17427486859916763`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.19937249482197295`}, {2., -0.1485796997820161}, {
         3., -0.13556934066751972`}, {4., -0.13353470799809597`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.1657773945051138}, {2., -0.11714557362241426`}, {
         3., -0.10471075654167186`}, {4., -0.10276249443283637`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.1381568259098598}, {2., -0.09386835932846183}, {
         3., -0.08119535314979708}, {
         4., -0.07939929972945833}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0.921, 0}, 
     PlotRange -> {{0.9, 5.1}, {-0.35035281826217074`, 0}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.921, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.9, 5.1}, {-0.35035281826217074`, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {{{1, 
         FormBox["3", TraditionalForm]}, {2, 
         FormBox["4", TraditionalForm]}, {3, 
         FormBox["5", TraditionalForm]}, {4, 
         FormBox["6", TraditionalForm]}, {5, 
         FormBox["7", TraditionalForm]}, {6, 
         FormBox["8", TraditionalForm]}, {7, 
         FormBox["9", TraditionalForm]}}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Mo\"", "\"Ru\"", "\"Rh\"", "\"Pd\"", "\"Ag\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.695638851937812*^9, 3.703330653743785*^9, 3.703330697290472*^9, {
   3.703330759257175*^9, 3.703330790992649*^9}, 
   3.703331010751223*^9},ExpressionUUID->"68943688-c4c1-4242-aa21-\
1b49e1918d3e"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 3},ExpressionUUID->"2d2cc54e-e793-4100-911a-033a5ed3f5f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "TH", " ", "ROW"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.44323130503066155`"}], ",", 
      RowBox[{"-", "0.42603393553119073`"}], ",", 
      RowBox[{"-", "0.42712547482045204`"}], ",", 
      RowBox[{"-", "0.42817463771705205`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2708290495121187`"}], ",", 
      RowBox[{"-", "0.22038709972324197`"}], ",", 
      RowBox[{"-", "0.2068453697683175`"}], ",", 
      RowBox[{"-", "0.2047918588388887`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.27539942953631563`"}], ",", 
      RowBox[{"-", "0.22898301361226783`"}], ",", 
      RowBox[{"-", "0.21708245842486992`"}], ",", 
      RowBox[{"-", "0.21534565138184164`"}], ",", "Indeterminate"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.23760563925738018`"}], ",", 
      RowBox[{"-", "0.18808113106400562`"}], ",", 
      RowBox[{"-", "0.17468551779592725`"}], ",", 
      RowBox[{"-", "0.17260293173238136`"}], ",", "Indeterminate"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703331260745892*^9, 
  3.703331284063322*^9}},ExpressionUUID->"d52820ec-ab9b-453b-8b44-\
989322370aff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.44323130503066155`}, {2., -0.42603393553119073`}, {
         3., -0.42712547482045204`}, {4., -0.42817463771705205`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.2708290495121187}, {2., -0.22038709972324197`}, {
         3., -0.2068453697683175}, {4., -0.2047918588388887}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.27539942953631563`}, {2., -0.22898301361226783`}, {
         3., -0.21708245842486992`}, {4., -0.21534565138184164`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.23760563925738018`}, {2., -0.18808113106400562`}, {
         3., -0.17468551779592725`}, {
         4., -0.17260293173238136`}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0.921, 0}, 
     PlotRange -> {{0.9, 5.1}, {-0.44323130503066155`, 0}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.921, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.9, 5.1}, {-0.44323130503066155`, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {{{1, 
         FormBox["3", TraditionalForm]}, {2, 
         FormBox["4", TraditionalForm]}, {3, 
         FormBox["5", TraditionalForm]}, {4, 
         FormBox["6", TraditionalForm]}, {5, 
         FormBox["7", TraditionalForm]}, {6, 
         FormBox["8", TraditionalForm]}, {7, 
         FormBox["9", TraditionalForm]}}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"W\"", "\"Ir\"", "\"Pt\"", "\"Au\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",ExpressionUU\
ID->"9947c59d-4b44-4bac-9b30-b2f99eb2ad2f"],

Cell["", "PageBreak",
 PageBreakBelow->True,ExpressionUUID->"77927e48-9ad2-4b4c-adbe-658aef6e15b6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"OLD", " ", "Results"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.703331296724641*^9, 
  3.703331309807514*^9}},ExpressionUUID->"3ecd3b48-8904-47ce-869a-\
085ee11a2775"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"da71122b-9605-40a2-94cb-1ee4b31d27a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"1", "st_run"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<d/s ratio\>\"", ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.3746236361729733`"}], ",", 
       RowBox[{"-", "0.30768685207492297`"}], ",", 
       RowBox[{"-", "0.2720734903748831`"}], ",", 
       RowBox[{"-", "0.2522100421802782`"}], ",", 
       RowBox[{"-", "0.24263827748051076`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.23339739682016764`"}], ",", 
       RowBox[{"-", "0.17668256193637735`"}], ",", 
       RowBox[{"-", "0.14309585958665005`"}], ",", 
       RowBox[{"-", "0.12350543561418324`"}], ",", 
       RowBox[{"-", "0.11159238237895264`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.20598145294640904`"}], ",", 
       RowBox[{"-", "0.15270796325145491`"}], ",", 
       RowBox[{"-", "0.12088715992867825`"}], ",", 
       RowBox[{"-", "0.10089518989917752`"}], ",", 
       RowBox[{"-", "0.08993229405614099`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.18318235086187348`"}], ",", 
       RowBox[{"-", "0.13332856838118942`"}], ",", 
       RowBox[{"-", "0.10342642267301737`"}], ",", 
       RowBox[{"-", "0.08457984945110428`"}], ",", 
       RowBox[{"-", "0.07418750718822237`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.16390761341376844`"}], ",", 
       RowBox[{"-", "0.11734828804254137`"}], ",", 
       RowBox[{"-", "0.08938339417486355`"}], ",", 
       RowBox[{"-", "0.0717579084537657`"}], ",", 
       RowBox[{"-", "0.06203322647484005`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.21722969570581654`"}], ",", 
       RowBox[{"-", "0.17463532883287755`"}], ",", 
       RowBox[{"-", "0.15002609507232448`"}], ",", 
       RowBox[{"-", "0.1351834576257597`"}], ",", 
       RowBox[{"-", "0.1279405621758133`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.13309555809593546`"}], ",", 
       RowBox[{"-", "0.09259074464327481`"}], ",", 
       RowBox[{"-", "0.06831380264121391`"}], ",", 
       RowBox[{"-", "0.05407912525134909`"}], ",", 
       RowBox[{"-", "0.04534994193704059`"}]}], "}"}]}], "}"}], "\n", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.3746236361729733}, {2., -0.30768685207492297`}, {
           3., -0.2720734903748831}, {4., -0.2522100421802782}, {
           5., -0.24263827748051076`}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.23339739682016764`}, {2., -0.17668256193637735`}, {
           3., -0.14309585958665005`}, {4., -0.12350543561418324`}, {
           5., -0.11159238237895264`}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.20598145294640904`}, {2., -0.15270796325145491`}, {
           3., -0.12088715992867825`}, {4., -0.10089518989917752`}, {
           5., -0.08993229405614099}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.18318235086187348`}, {2., -0.13332856838118942`}, {
           3., -0.10342642267301737`}, {4., -0.08457984945110428}, {
           5., -0.07418750718822237}}]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.16390761341376844`}, {2., -0.11734828804254137`}, {
           3., -0.08938339417486355}, {4., -0.0717579084537657}, {
           5., -0.06203322647484005}}]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.21722969570581654`}, {2., -0.17463532883287755`}, {
           3., -0.15002609507232448`}, {4., -0.1351834576257597}, {
           5., -0.1279405621758133}}]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.13309555809593546`}, {2., -0.09259074464327481}, {
           3., -0.06831380264121391}, {4., -0.05407912525134909}, {
           5., -0.04534994193704059}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.02]}}, AxesOrigin -> {0.921, 0}, 
       PlotRange -> {{0.9, 5.1}, {-0.3746236361729733, 0}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.921, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.9, 5.1}, {-0.3746236361729733, 0}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {
          Scaled[0.05], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"Ti\"", "\"Mn\"", "\"Fe\"", "\"Co\"", "\"Ni\"", "\"Cu\"", "\"Zn\""},
         "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}]], "Input",
 CellChangeTimes->{{3.6956380654060993`*^9, 
  3.695638085270108*^9}},ExpressionUUID->"e1bf7fd5-b99f-4755-b76c-\
308d7bb7102d"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"c6754f99-650d-4731-9090-399e587b05b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "nd_run"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<d/s ratio\>\"", ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Ru\>\"", ",", "\"\<Rh\>\"", ",", "\"\<Pd\>\"", ",", "\"\<Ag\>\"", 
    ",", "\"\<Ir\>\"", ",", "\"\<Pt\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6956386310808372`*^9, 3.695638639121438*^9}, 
   3.695638690376652*^9},ExpressionUUID->"3c9a55d8-0a64-4fd1-a449-\
3533f3bea3b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35533494074852817`"}], ",", 
     RowBox[{"-", "0.27342655534748556`"}], ",", 
     RowBox[{"-", "0.22658425783281738`"}], ",", 
     RowBox[{"-", "0.19833834458646402`"}], ",", 
     RowBox[{"-", "0.1834696196913244`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3108984762351068`"}], ",", 
     RowBox[{"-", "0.2316643448610751`"}], ",", 
     RowBox[{"-", "0.18576425204707714`"}], ",", 
     RowBox[{"-", "0.15954691706825522`"}], ",", 
     RowBox[{"-", "0.14388128870272882`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.27747724285325337`"}], ",", 
     RowBox[{"-", "0.1966893045143597`"}], ",", 
     RowBox[{"-", "0.1527454313209116`"}], ",", 
     RowBox[{"-", "0.12763967369078208`"}], ",", 
     RowBox[{"-", "0.11265671585776128`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.24363978911973558`"}], ",", 
     RowBox[{"-", "0.17057080768092603`"}], ",", 
     RowBox[{"-", "0.12824328038025515`"}], ",", 
     RowBox[{"-", "0.1024210772669725`"}], ",", 
     RowBox[{"-", "0.08851273159701521`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.37411998117178685`"}], ",", 
     RowBox[{"-", "0.3014498802503214`"}], ",", 
     RowBox[{"-", "0.25765949495716917`"}], ",", 
     RowBox[{"-", "0.23162515761094446`"}], ",", 
     RowBox[{"-", "0.21550372017456848`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.37445502475105563`"}], ",", 
     RowBox[{"-", "0.30439399527373995`"}], ",", 
     RowBox[{"-", "0.2630803825707832`"}], ",", 
     RowBox[{"-", "0.23911007156371092`"}], ",", 
     RowBox[{"-", "0.22464094778231633`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.695637279261037*^9, 3.6956372970800467`*^9}, 
   3.695637445759577*^9, 3.6956375105630293`*^9, 3.695637550416597*^9, 
   3.69563759899784*^9, {3.6956379249663553`*^9, 3.695637960205803*^9}, 
   3.695638024442937*^9, 3.695638424038814*^9, {3.695638582284259*^9, 
   3.695638602204921*^9}},ExpressionUUID->"604b4fb5-093b-47af-9131-\
90ef77d6dcb3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.35533494074852817`}, {2., -0.27342655534748556`}, {
         3., -0.22658425783281738`}, {4., -0.19833834458646402`}, {
         5., -0.1834696196913244}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.3108984762351068}, {2., -0.2316643448610751}, {
         3., -0.18576425204707714`}, {4., -0.15954691706825522`}, {
         5., -0.14388128870272882`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.27747724285325337`}, {2., -0.1966893045143597}, {
         3., -0.1527454313209116}, {4., -0.12763967369078208`}, {
         5., -0.11265671585776128`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.24363978911973558`}, {2., -0.17057080768092603`}, {
         3., -0.12824328038025515`}, {4., -0.1024210772669725}, {
         5., -0.08851273159701521}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.37411998117178685`}, {2., -0.3014498802503214}, {
         3., -0.25765949495716917`}, {4., -0.23162515761094446`}, {
         5., -0.21550372017456848`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.37445502475105563`}, {2., -0.30439399527373995`}, {
         3., -0.2630803825707832}, {4., -0.23911007156371092`}, {
         5., -0.22464094778231633`}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0.921, 0}, 
     PlotRange -> {{0.9, 5.1}, {-0.37445502475105563`, 0}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.921, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.9, 5.1}, {-0.37445502475105563`, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ru\"", "\"Rh\"", "\"Pd\"", "\"Ag\"", "\"Ir\"", "\"Pt\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.695637279261037*^9, 3.6956372970800467`*^9}, 
   3.695637445759577*^9, 3.6956375105630293`*^9, 3.695637550416597*^9, 
   3.69563759899784*^9, {3.6956379249663553`*^9, 3.695637960205803*^9}, 
   3.695638024442937*^9, 3.695638424038814*^9, {3.695638582284259*^9, 
   3.695638602417877*^9}},ExpressionUUID->"505cc633-880d-4c0f-9d5f-\
852968a258e5"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 4},ExpressionUUID->"129c70ed-2041-47b7-9461-99f095ada9ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"3", "nd_run"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<d/s ratio\>\"", ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", "\"\<Au\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.6956388896151257`*^9, 
  3.695638894367866*^9}},ExpressionUUID->"0a4fbe20-7d7e-4559-b05c-\
7d778de49dde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.3387014303125046`"}], ",", 
    RowBox[{"-", "0.2676225840211774`"}], ",", 
    RowBox[{"-", "0.22468595448095197`"}], ",", 
    RowBox[{"-", "0.19912713587216424`"}], ",", 
    RowBox[{"-", "0.18327097213377277`"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.695638852004393*^9},ExpressionUUID->"c7f7fa00-35b5-48fc-8b69-\
e14c14923986"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.3387014303125046}, {2., -0.2676225840211774}, {
         3., -0.22468595448095197`}, {4., -0.19912713587216424`}, {
         5., -0.18327097213377277`}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0.921, -0.1754994492248362}, 
     PlotRange -> {{0.9, 5.1}, {-0.3387014303125046, -0.18327097213377277`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.921, -0.1754994492248362}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.9, 5.1}, {-0.3387014303125046, -0.18327097213377277`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Au\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6956388521478148`*^9},ExpressionUUID->"9d3211b5-47a3-4d16-9d7a-\
2c3dd84968ca"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"50d50e97-fa67-40ef-ba5a-c48fbea95266"]
}, Open  ]]
},
WindowSize->{1440, 816},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 98, "Title",ExpressionUUID->"652d2e1f-87d4-4bc3-a477-046f9d40e4a9"],
Cell[754, 27, 1016, 28, 81, "Text",ExpressionUUID->"587b9869-7430-4b16-bfff-393522d967f9"],
Cell[CellGroupData[{
Cell[1795, 59, 6835, 186, 325, "Input",ExpressionUUID->"09138d90-92f8-4326-9010-edcedccf883a"],
Cell[8633, 247, 962, 26, 83, "Output",ExpressionUUID->"e1333b37-ea16-4cd5-a65c-788b2c0cdf3e"],
Cell[9598, 275, 34365, 594, 603, 2050, 63, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"78b48563-287d-468b-a6bd-cbcc50cd9873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44000, 874, 4875, 117, 283, "Input",ExpressionUUID->"05119fe7-5581-4cde-b27e-3f55590c8b7a"],
Cell[48878, 993, 425, 8, 34, "Output",ExpressionUUID->"d0535c91-e4a3-4515-b06e-85419acc1107"],
Cell[CellGroupData[{
Cell[49328, 1005, 292, 5, 24, "Print",ExpressionUUID->"d6ad371c-38c5-412f-aab9-3810679f3d3c"],
Cell[49623, 1012, 290, 4, 24, "Print",ExpressionUUID->"82c66380-bb6c-4db6-9a22-19380acdcb3b"],
Cell[49916, 1018, 293, 5, 24, "Print",ExpressionUUID->"bc96798f-162f-48b6-86b0-befba8be53ca"],
Cell[50212, 1025, 295, 5, 24, "Print",ExpressionUUID->"5e2d16a0-62ef-4c96-ace5-882b695d1efc"],
Cell[50510, 1032, 293, 5, 24, "Print",ExpressionUUID->"73384b95-0519-4109-86c8-00d24f5a8a92"],
Cell[50806, 1039, 293, 5, 24, "Print",ExpressionUUID->"659db642-8202-4704-9981-84fa2554e0f3"],
Cell[51102, 1046, 293, 5, 24, "Print",ExpressionUUID->"dc8642bb-1dae-4f2d-98b9-6c140a656683"],
Cell[51398, 1053, 295, 5, 24, "Print",ExpressionUUID->"d43d0b97-e6d4-4d54-beb0-afb4ed20f8e0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51742, 1064, 1813, 45, 52, "Input",ExpressionUUID->"43770928-2c58-4832-8ed8-71cad4810c99"],
Cell[53558, 1111, 306677, 5283, 473, "Output",ExpressionUUID->"11738b55-c79d-408d-b090-ac4457360255"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360272, 6399, 8271, 234, 367, "Input",ExpressionUUID->"c5e3ad32-f88c-4504-bed6-436efd523c41"],
Cell[368546, 6635, 1351, 34, 56, "Output",ExpressionUUID->"abbdf75c-ca69-4465-b114-942c2f928e32"],
Cell[369900, 6671, 20035, 407, 231, "Output",ExpressionUUID->"cb4abc5b-8d18-48fa-93fa-88c387d057fd"]
}, Open  ]],
Cell[389950, 7081, 99, 1, 4, "PageBreak",ExpressionUUID->"571bec99-b74d-4e37-bb4b-2d8b73950e48",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[390074, 7086, 7243, 189, 331, "Input",ExpressionUUID->"b2a916f3-04bb-49e3-9993-7fdb67185061"],
Cell[397320, 7277, 38637, 785, 228, "Output",ExpressionUUID->"bfa6c4bb-e55e-4b10-89b5-93875183fbc6"]
}, Open  ]],
Cell[435972, 8065, 331, 10, 6, "Text",ExpressionUUID->"ec09c143-b630-44f5-920a-1819c49788fe"],
Cell[CellGroupData[{
Cell[436328, 8079, 1629, 43, 136, "Input",ExpressionUUID->"6c1701f7-042a-4264-9066-d8c37829e155"],
Cell[437960, 8124, 23881, 486, 228, "Output",ExpressionUUID->"68943688-c4c1-4242-aa21-1b49e1918d3e"]
}, Open  ]],
Cell[461856, 8613, 331, 10, 6, "Text",ExpressionUUID->"2d2cc54e-e793-4100-911a-033a5ed3f5f4"],
Cell[462190, 8625, 1361, 36, 115, "Input",ExpressionUUID->"d52820ec-ab9b-453b-8b44-989322370aff"],
Cell[463554, 8663, 19845, 403, 227, "Input",ExpressionUUID->"9947c59d-4b44-4bac-9b30-b2f99eb2ad2f"],
Cell[483402, 9068, 99, 1, 4, "PageBreak",ExpressionUUID->"77927e48-9ad2-4b4c-adbe-658aef6e15b6",
 PageBreakBelow->True],
Cell[483504, 9071, 218, 5, 30, "Input",ExpressionUUID->"3ecd3b48-8904-47ce-869a-085ee11a2775"],
Cell[483725, 9078, 329, 10, 8, "Text",ExpressionUUID->"da71122b-9605-40a2-94cb-1ee4b31d27a9"],
Cell[484057, 9090, 34258, 704, 430, "Input",ExpressionUUID->"e1bf7fd5-b99f-4755-b76c-308d7bb7102d"],
Cell[518318, 9796, 329, 10, 8, "Text",ExpressionUUID->"c6754f99-650d-4731-9090-399e587b05b4"],
Cell[CellGroupData[{
Cell[518672, 9810, 505, 12, 73, "Input",ExpressionUUID->"3c9a55d8-0a64-4fd1-a449-3533f3bea3b3"],
Cell[519180, 9824, 2147, 50, 56, "Output",ExpressionUUID->"604b4fb5-093b-47af-9131-90ef77d6dcb3"],
Cell[521330, 9876, 27800, 563, 231, "Output",ExpressionUUID->"505cc633-880d-4c0f-9d5f-852968a258e5"]
}, Open  ]],
Cell[549145, 10442, 329, 10, 8, "Text",ExpressionUUID->"129c70ed-2041-47b7-9461-99f095ada9ea"],
Cell[CellGroupData[{
Cell[549499, 10456, 364, 9, 73, "Input",ExpressionUUID->"0a4fbe20-7d7e-4559-b05c-7d778de49dde"],
Cell[549866, 10467, 422, 11, 34, "Output",ExpressionUUID->"c7f7fa00-35b5-48fc-8b69-e14c14923986"],
Cell[550291, 10480, 8054, 164, 229, "Output",ExpressionUUID->"9d3211b5-47a3-4d16-9d7a-2c3dd84968ca"]
}, Open  ]],
Cell[558360, 10647, 329, 10, 10, "Text",ExpressionUUID->"50d50e97-fa67-40ef-ba5a-c48fbea95266"]
}, Open  ]]
}
]
*)

